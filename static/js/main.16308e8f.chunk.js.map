{"version":3,"sources":["reducer.js","components/Help.js","routes/Home.js","styles/GlobalStyle.js","components/Card.js","components/List.js","components/Board.js","routes/BoardPage.js","components/CardBody.js","routes/CardPage.js","Router.js","App.js","index.js"],"names":["reducer","state","action","type","newBoardName","payload","newBoard","boardKey","Date","now","boardName","listList","pin","boardList","newListName","forEach","board","newList","listKey","String","listName","cardList","push","newCardName","list","newCard","cardKey","cardName","done","description","filter","card","startListKey","endListKey","startIndex","endIndex","dragCard","splice","dragList","Help","show","HelpContainer","showHelp","Bold","styled","div","ADD","DELETE","PIN","PALETTE","Home","React","useContext","BoardListContext","dispatch","findElement","useState","text","setText","setShowHelp","deleteBoard","key","window","confirm","Container","BoardsWrapper","Title","Boards","map","BoardLink","ToBoard","to","pathname","Button","onClick","className","BoardAdder","BoardInput","value","onChange","e","target","placeholder","preventDefault","createNewBoard","HelpLink","button","Input","input","h2","Link","a","GlobalStyle","createGlobalStyle","Card","location","useLocation","ICON","Cardtext","background","CardButton","props","List","nextListName","setNextListName","nextListNameRef","useRef","ListContainer","ListTitle","StyledEditable","innerRef","html","disabled","onBlur","current","innerHTML","spellCheck","onKeyPress","keyCode","which","returnValue","droppableId","provided","ScrollView","ref","droppableProps","index","draggableId","snapshot","CardWrapper","draggableProps","dragHandleProps","isDragging","CardAdder","CardInput","createNewCard","ContentEditable","h4","Board","BoardContainer","onDragEnd","result","destination","source","direction","ListField","Wrapper","ListWrapper","ListAdder","ListInput","createNewList","BoardPage","useParams","history","useHistory","Number","nextBoardName","setNextBoardName","nextBoardNameRef","BoardPageWrapper","Header","BoardTitle","ToHome","h1","header","CardBody","status","oppositeStatus","CardPage","nextCardName","setNextCardName","nextCardNameRef","back","currentTarget","stopPropagation","goBack","Full","Modal","CardHeader","i","Router","path","exact","children","createContext","JSON","parse","localStorage","getItem","App","initialState","useReducer","useEffect","setItem","stringify","Provider","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16308e8f.chunk.js","sourcesContent":["function reducer(state, action){\r\n  switch(action.type){\r\n    case \"ADD_BOARD\": {\r\n      const { newBoardName } = action.payload;\r\n      const newBoard = {\r\n        boardKey: Date.now(),\r\n        boardName: newBoardName,\r\n        listList: [],\r\n        pin: false,\r\n      }\r\n      return { boardList: [...state.boardList, newBoard] };\r\n    }\r\n    case \"ADD_LIST\": {\r\n      const { newListName, boardKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          const newList = {\r\n            listKey: String(Date.now()),\r\n            listName: newListName,\r\n            cardList: []\r\n          }\r\n          board.listList.push(newList);\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"ADD_CARD\": {\r\n      const { newCardName, boardKey, listKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              const newCard = {\r\n                cardKey: String(Date.now()),\r\n                cardName: newCardName,\r\n                done: false,\r\n                description: 'Add a description',\r\n              }\r\n              list.cardList.push(newCard);\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};  \r\n    }\r\n    case \"DELETE_BOARD\": {\r\n      const { boardKey } = action.payload;\r\n      const newBoardList = state.boardList.filter(board => board.boardKey!==boardKey);\r\n      return { boardList: newBoardList };\r\n    }\r\n    case \"DELETE_LIST\": {\r\n      const { boardKey, listKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList = board.listList.filter(list => list.listKey !== listKey);\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"DELETE_CARD\": {\r\n      const { boardKey, listKey, cardKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              list.cardList = list.cardList.filter(card => card.cardKey !== cardKey);\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"EDIT_BOARD\": {\r\n      const { boardKey, newBoardName } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.boardName = newBoardName;\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"EDIT_LIST\": {\r\n      const { boardKey, listKey, newListName } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              list.listName = newListName;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"EDIT_CARD\": {\r\n      const { boardKey, listKey, cardKey, newCardName } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              list.cardList.forEach(card => {\r\n                if(card.cardKey===cardKey){\r\n                  card.cardName = newCardName;\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"TOGGLE_PIN\": {\r\n      const { boardKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.pin = !board.pin;\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"TOGGLE_DONE\": {\r\n      const { boardKey, listKey, cardKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              list.cardList.forEach(card => {\r\n                if(card.cardKey===cardKey){\r\n                  card.done = !card.done;\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"SWITCH_CARD\": {\r\n      const { boardKey, startListKey, endListKey, startIndex, endIndex } = action.payload;\r\n      let dragCard = null;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===startListKey){\r\n              dragCard = list.cardList[startIndex];\r\n              list.cardList.splice(startIndex, 1);\r\n              if(startListKey===endListKey){\r\n                list.cardList.splice(endIndex, 0, dragCard);\r\n              }\r\n              else{\r\n                board.listList.forEach(list => {\r\n                  if(list.listKey===endListKey){\r\n                    list.cardList.splice(endIndex, 0, dragCard);\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"SWITCH_LIST\": {\r\n      const { boardKey, startIndex, endIndex } = action.payload;\r\n      let dragList = null;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          dragList = board.listList[startIndex];\r\n          board.listList.splice(startIndex, 1);\r\n          board.listList.splice(endIndex, 0, dragList);\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PALETTE = ['#E9ECE5', '#C0DFD9', '#B3C2BF', '#3B3A36'];\r\n\r\nexport default function Help({ show }) {\r\n  return (\r\n    show ? (\r\n      <HelpContainer showHelp>\r\n        <Bold>Home Page</Bold>\r\n          Click on a board name to enter the board page<br />\r\n          Pin important boards for quick access<br /><br />\r\n        <Bold>Board Page</Bold>\r\n          Click on the board or list name to modify it<br />\r\n          Drag and drop lists and cards to change their positions<br /><br />\r\n        <Bold>Card Page</Bold>\r\n          Coming soon<br />\r\n      </HelpContainer>\r\n    ) : null\r\n  );\r\n}\r\n\r\nconst HelpContainer = styled.div`\r\n  position: fixed;\r\n  padding: 30px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -90%);\r\n  background: ${PALETTE[2]};\r\n  display: block;\r\n  border-radius: 10px;\r\n  font-size: 16px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst Bold = styled.div`\r\n  font-weight: bold;\r\n  text-decoration: underline;\r\n`;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Help from '../components/Help';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport const ADD = 'fas fa-plus';\r\nexport const DELETE = \"fas fa-trash\";\r\nconst PIN = \"far fa-star\";\r\nconst PINNED = \"fas fa-star\";\r\nexport const PALETTE = ['#E9ECE5', '#C0DFD9', '#B3C2BF', '#3B3A36'];\r\n\r\nexport default function Home() {\r\n  const { dispatch, findElement } = React.useContext(BoardListContext);\r\n  const boardList = findElement();\r\n  const [text, setText] = useState(\"\");\r\n  const [showHelp, setShowHelp] = useState(false);\r\n  const createNewBoard = text => {\r\n    dispatch({\r\n      type: \"ADD_BOARD\",\r\n      payload: {\r\n        newBoardName: text\r\n      }\r\n    });\r\n  };\r\n  const deleteBoard = key => {\r\n    const askDelete = window.confirm(\"Do you really want to remove the board?\");\r\n    if (askDelete) {\r\n      dispatch({\r\n        type: \"DELETE_BOARD\",\r\n        payload: {\r\n          boardKey: key\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const onChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if(text) createNewBoard(text);\r\n    setText(\"\");\r\n  };\r\n  return (\r\n    <Container>\r\n      <BoardsWrapper>\r\n        <Title>Pinned Boards</Title>\r\n        <Boards>\r\n          {boardList.map(board => (\r\n            board.pin ? (\r\n              <BoardLink key={board.boardKey}>\r\n                <ToBoard to={{\r\n                  pathname: `/${board.boardKey}/${board.boardName}`,\r\n                }}>\r\n                  {board.boardName}\r\n                </ToBoard>\r\n                <Button\r\n                  onClick={() => dispatch({\r\n                    type: \"TOGGLE_PIN\",\r\n                    payload: { boardKey: board.boardKey }\r\n                  })}\r\n                >\r\n                  <i className={board.pin ? PINNED : PIN}></i>\r\n                </Button>\r\n                <Button onClick={() => deleteBoard(board.boardKey)}>\r\n                  <i className={DELETE}></i>\r\n                </Button>\r\n              </BoardLink>\r\n            ) : null\r\n          ))}\r\n        </Boards>\r\n      </BoardsWrapper>\r\n      <BoardsWrapper>\r\n        <Title>Boards</Title>\r\n        <Boards>\r\n          {boardList.map(board => (\r\n            <BoardLink key={board.boardKey}>\r\n              <ToBoard to={{\r\n                pathname: `/${board.boardKey}/${board.boardName}`,\r\n              }}>\r\n                {board.boardName}\r\n              </ToBoard>\r\n              <Button onClick={() => dispatch({\r\n                type: \"TOGGLE_PIN\",\r\n                payload: { boardKey: board.boardKey }\r\n              })}\r\n              >\r\n                <i className={board.pin ? PINNED : PIN}></i>\r\n              </Button>\r\n              <Button onClick={() => deleteBoard(board.boardKey)}>\r\n                <i className={DELETE}></i>\r\n              </Button>\r\n            </BoardLink>\r\n          ))}\r\n          <BoardAdder>\r\n            <BoardInput type=\"text\" value={text} onChange={onChange} placeholder='Add a board..' />\r\n            <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n          </BoardAdder>\r\n        </Boards>\r\n      </BoardsWrapper>\r\n      <HelpLink\r\n        onClick={() => setShowHelp(!showHelp)}\r\n      >\r\n        {showHelp ? 'Hide' : 'Tips'}\r\n      </HelpLink>\r\n      <Help show={showHelp} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport const Button = styled.button`\r\n  border: none;\r\n  background: none;\r\n  &:hover{\r\n      color: ${PALETTE[2]};\r\n  }\r\n  cursor: pointer;\r\n  color: ${PALETTE[3]};  \r\n  outline: none;  \r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border: none;\r\n  padding: 5px;\r\n  background: none;\r\n  font-family: 'Open Sans', 'Noto Sans KR';\r\n  &::placeholder{\r\n      color: ${PALETTE[2]};\r\n  }\r\n  outline-color: ${PALETTE[3]};\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  color: ${PALETTE[3]};\r\n`;\r\n\r\nconst BoardInput = styled(Input)`\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  margin: auto 0;\r\n`;\r\n\r\nconst ToBoard = styled(Link)`\r\n  color: ${PALETTE[3]};\r\n  text-decoration: none;\r\n  &:hover{\r\n      color: ${PALETTE[2]};\r\n  }\r\n  margin: auto;\r\n  font-weight: bold;\r\n  word-wrap: break-word;\r\n  word-break: break-word;\r\n  text-align: center;\r\n`;\r\n\r\nconst BoardAdder = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 10px;\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n  width: 200px;\r\n  height: 80px;\r\n  background-color: white;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 40px;\r\n`;\r\n\r\nconst BoardLink = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n  width: 200px;\r\n  height: 80px;\r\n  background-color: white;\r\n`;\r\n\r\nconst Boards = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n`;\r\n\r\nconst BoardsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  align-items: center;\r\n  border-radius: 20px;\r\n  background-color: ${PALETTE[1]};\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst HelpLink = styled.a`\r\n  padding-top: 20px;\r\n  font-size: 14px;\r\n  color: ${PALETTE[3]};\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  text-decoration: underline;\r\n`;\r\n\r\n\r\n\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { PALETTE } from '../routes/Home';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  *{\r\n    box-sizing: border-box;\r\n  }\r\n  html{\r\n    height: 100%;\r\n  }\r\n  body{\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family: 'Open Sans', 'Noto Sans KR';\r\n    background-color: ${PALETTE[0]};\r\n    height: 100%;\r\n  }\r\n  #root{\r\n    height: 100%;\r\n  }\r\n  ::-webkit-scrollbar{\r\n    background: none;\r\n    height: 14px;\r\n  }\r\n  ::-webkit-scrollbar-track{\r\n    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.2);\r\n    border-radius: 10px;\r\n  }\r\n  ::-webkit-scrollbar-thumb{\r\n    background: rgba(0, 0, 0, 0.15);\r\n    border-radius: 10px;\r\n  }\r\n`;","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Button, PALETTE } from '../routes/Home';\r\nimport { BoardListContext } from '../App';\r\n\r\nconst CHECK = \"fas fa-check\";\r\nconst DONE = \"fas fa-times\";\r\n\r\nexport default function Card({ boardKey, listKey, cardKey }) {\r\n  const location = useLocation();\r\n  const { dispatch, findElement } = React.useContext(BoardListContext);\r\n  const { cardName, done } = findElement(boardKey, listKey, cardKey);\r\n  const ICON = done ? DONE : CHECK;\r\n  return (\r\n    <>\r\n      <Cardtext\r\n        done={done ? 1 : 0}\r\n        to={{\r\n          pathname: `/${cardKey}/${cardName}`,\r\n          state: {\r\n            background: location,\r\n            boardKey: boardKey,\r\n            listKey: listKey,\r\n            cardKey: cardKey,\r\n          }\r\n        }}\r\n      >\r\n        {cardName}\r\n      </Cardtext>\r\n      <CardButton\r\n        done={done}\r\n        onClick={() => dispatch({\r\n          type: \"TOGGLE_DONE\",\r\n          payload: {\r\n            boardKey: boardKey,\r\n            listKey: listKey,\r\n            cardKey: cardKey\r\n          }\r\n        })}\r\n      >\r\n        <i className={ICON}></i>\r\n      </CardButton>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Cardtext = styled(Link)`\r\n  width: 100%;\r\n  padding: 5px;\r\n  text-align: left;\r\n  font-size: 14px;\r\n  text-decoration: ${props => (props.done ? 'line-through' : 'none')};\r\n  color: ${PALETTE[3]};\r\n`;\r\n\r\nconst CardButton = styled(Button)`\r\n  &:hover{\r\n    color: ${PALETTE[0]};\r\n  }\r\n`;","import React, { useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from './Card';\r\nimport { Button, Input, ADD, DELETE, PALETTE } from '../routes/Home';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport default function List({ boardKey, listKey }) {\r\n  const { dispatch, findElement } = React.useContext(BoardListContext);\r\n  const { listName, cardList } = findElement(boardKey, listKey);\r\n  const [text, setText] = useState(\"\");\r\n  const [nextListName, setNextListName] = useState(listName);\r\n  const nextListNameRef = useRef();\r\n  const createNewCard = text => {\r\n    dispatch({\r\n      type: \"ADD_CARD\",\r\n      payload: {\r\n        newCardName: text,\r\n        boardKey: boardKey,\r\n        listKey: listKey,\r\n      }\r\n    });\r\n  };\r\n  const onChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if(text) createNewCard(text);\r\n    setText(\"\");\r\n  };\r\n  const deleteCard = (key) => {\r\n    const askDelete = window.confirm(\"Do you really want to remove the card?\");\r\n    if (askDelete) {\r\n      dispatch({\r\n        type: \"DELETE_CARD\",\r\n        payload: {\r\n          boardKey: boardKey,\r\n          listKey: listKey,\r\n          cardKey: key\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const changeText = e => {\r\n    setNextListName(e.target.value);\r\n  };\r\n  const editListName = () => {\r\n    const nextListName = nextListNameRef.current.innerHTML;\r\n    if (!nextListName) {\r\n      setNextListName(listName);\r\n      return;\r\n    }\r\n    else dispatch({\r\n      type: \"EDIT_LIST\",\r\n      payload: {\r\n        newListName: nextListName,\r\n        boardKey: boardKey,\r\n        listKey: listKey,\r\n      }\r\n    });\r\n  }\r\n  const disableNewLines = e => {\r\n    const keyCode = e.keyCode || e.which;\r\n    if (keyCode === 13) {\r\n      e.returnValue = false;\r\n      if (e.preventDefault) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <ListContainer>\r\n      <ListTitle>\r\n        <StyledEditable\r\n          innerRef={nextListNameRef}\r\n          html={nextListName}\r\n          disabled={false}\r\n          onChange={changeText}\r\n          onBlur={editListName}\r\n          spellCheck='false'\r\n          onKeyPress={disableNewLines}\r\n        />\r\n      </ListTitle>\r\n      <Droppable droppableId={listKey} type=\"card\">\r\n        {(provided) => (\r\n          <ScrollView\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n          >\r\n            {cardList.map((card, index) => (\r\n              <Draggable key={card.cardKey} draggableId={card.cardKey} index={index}>\r\n                {(provided, snapshot) => (\r\n                  <CardWrapper\r\n                    key={card.cardKey}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                    isDragging={snapshot.isDragging}\r\n                  >\r\n                    <Card\r\n                      boardKey={boardKey}\r\n                      listKey={listKey}\r\n                      cardKey={card.cardKey}\r\n                    />\r\n                    <CardButton onClick={() => deleteCard(card.cardKey)}>\r\n                      <i className={DELETE}></i>\r\n                    </CardButton>\r\n                  </CardWrapper>\r\n                )}\r\n\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </ScrollView>\r\n        )}\r\n      </Droppable>\r\n      <CardAdder>\r\n        <CardInput type=\"text\" value={text} onChange={onChange} placeholder='Add a card..' />\r\n        <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n      </CardAdder>\r\n    </ListContainer>\r\n  );\r\n\r\n}\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  word-wrap: break-word;\r\n  word-break: break-word;\r\n  max-height: 100%;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin: 5px 0;\r\n  border-radius: 5px;\r\n  background-color: ${PALETTE[2]};\r\n  padding: 10px;\r\n  color: ${PALETTE[3]};\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst ScrollView = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  overflow-y: auto;\r\n  min-height: 1px;\r\n`;\r\n\r\nconst CardAdder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  margin: 5px 0 10px 0;\r\n  background-color: ${PALETTE[0]};\r\n  padding: 10px;\r\n  color: white;\r\n`;\r\n\r\nconst CardInput = styled(Input)`\r\n    width: 100%;\r\n`;\r\n\r\nconst CardButton = styled(Button)`\r\n  &:hover{\r\n      color: ${PALETTE[0]};\r\n  }\r\n`;\r\n\r\nconst StyledEditable = styled(ContentEditable)`\r\n  padding: 5px;  \r\n  outline-color: ${PALETTE[3]};  \r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  text-align: left;\r\n  margin: 5px 0;\r\n`;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport List from './List';\r\nimport { Button, Input, ADD, DELETE } from '../routes/Home';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport default function Board({ boardKey }) {\r\n  const { dispatch, findElement } = React.useContext(BoardListContext);\r\n  const { listList } = findElement(boardKey);\r\n  const [text, setText] = useState(\"\");\r\n  const createNewList = text => {\r\n    dispatch({\r\n      type: \"ADD_LIST\",\r\n      payload: {\r\n        newListName: text,\r\n        boardKey: boardKey\r\n      }\r\n    });\r\n  };\r\n  const deleteList = (key) => {\r\n    const askDelete = window.confirm(\"Do you really want to remove the list?\");\r\n    if (askDelete) {\r\n      dispatch({\r\n        type: \"DELETE_LIST\",\r\n        payload: {\r\n          boardKey: boardKey,\r\n          listKey: key\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const onChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if(text) createNewList(text);\r\n    setText(\"\");\r\n  };\r\n  const onDragEnd = result => {\r\n    const { destination, source, type } = result;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n    if (type === 'card') {\r\n      dispatch({\r\n        type: \"SWITCH_CARD\",\r\n        payload: {\r\n          boardKey: boardKey,\r\n          startListKey: source.droppableId,\r\n          endListKey: destination.droppableId,\r\n          startIndex: source.index,\r\n          endIndex: destination.index\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    else if (type === 'list') {\r\n      dispatch({\r\n        type: \"SWITCH_LIST\",\r\n        payload: {\r\n          boardKey: boardKey,\r\n          startIndex: source.index,\r\n          endIndex: destination.index\r\n        }\r\n      });\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BoardContainer>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"lists\" direction=\"horizontal\" type=\"list\">\r\n          {(provided) => (\r\n            <ListField\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {listList.map((list, index) => (\r\n                <Draggable key={list.listKey} draggableId={list.listKey} index={index}>\r\n                  {(provided) => (\r\n                    <Wrapper>\r\n                      <ListWrapper\r\n                        {...provided.draggableProps}\r\n                        ref={provided.innerRef}\r\n                        {...provided.dragHandleProps}\r\n                      >\r\n                        <List\r\n                          boardKey={boardKey}\r\n                          listKey={list.listKey}\r\n                        />\r\n                        <Button onClick={() => deleteList(list.listKey)}>\r\n                          <i className={DELETE}></i>\r\n                        </Button>\r\n                      </ListWrapper>\r\n                    </Wrapper>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </ListField>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n      <div>\r\n        <ListAdder>\r\n          <ListInput type=\"text\" value={text} onChange={onChange} placeholder='Add a list..' />\r\n          <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n        </ListAdder>\r\n      </div>\r\n    </BoardContainer>\r\n  );\r\n\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst BoardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  padding: 0 10px;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  height: 100%;\r\n`;\r\n\r\nconst ListAdder = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 20px 0 10px;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  padding: 10px 10px 5px 10px;\r\n  width: 230px;\r\n`;\r\n\r\nconst ListWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 10px;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  background-color: white;\r\n  min-width: 230px;\r\n  max-width: 230px;\r\n  max-height: 100%;\r\n`;\r\n\r\nconst ListInput = styled(Input)`\r\n  margin-bottom: 5px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ListField = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  height: 100%;\r\n`;","import React, { useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport Board from '../components/Board';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { PALETTE } from './Home';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport default function BoardPage() {\r\n  const { dispatch, findElement } = React.useContext(BoardListContext);\r\n  const { boardKey } = useParams();\r\n  const history = useHistory();\r\n  const board = findElement(Number(boardKey));\r\n  const [nextBoardName, setNextBoardName] = useState(board ? board.boardName : null);\r\n  const nextBoardNameRef = useRef();\r\n  if (!board) {\r\n    history.push(\"/\");\r\n    return null;\r\n  }\r\n  const editBoardName = () => {\r\n    const nextBoardName = nextBoardNameRef.current.innerHTML;\r\n    if (!nextBoardName) {\r\n      setNextBoardName(board.boardName);\r\n      return;\r\n    }\r\n    else dispatch({\r\n      type: \"EDIT_BOARD\",\r\n      payload: {\r\n        boardKey: board.boardKey,\r\n        newBoardName: nextBoardName\r\n      }\r\n    });\r\n  };\r\n  const changeText = e => {\r\n    setNextBoardName(e.target.value);\r\n  }\r\n  const disableNewLines = e => {\r\n    const keyCode = e.keyCode || e.which;\r\n    if (keyCode === 13) {\r\n      e.returnValue = false;\r\n      if (e.preventDefault) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <BoardPageWrapper>\r\n      <Header>\r\n        <BoardTitle>\r\n          <StyledEditable\r\n            innerRef={nextBoardNameRef}\r\n            html={nextBoardName}\r\n            disabled={false}\r\n            onChange={changeText}\r\n            onBlur={editBoardName}\r\n            onKeyPress={disableNewLines}\r\n            spellCheck='false'\r\n          />\r\n        </BoardTitle>\r\n        <ToHome to={{ pathname: '/' }}><i className=\"fas fa-home\"></i></ToHome>\r\n      </Header>\r\n      <Board\r\n        boardKey={board.boardKey}\r\n      />\r\n    </BoardPageWrapper>\r\n  );\r\n}\r\n\r\nconst BoardPageWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  text-align: center;\r\n  height: 100%;\r\n`;\r\n\r\nconst BoardTitle = styled.h1`\r\n  font-size: 24px;\r\n  margin: auto;\r\n  padding: 10px 20px;\r\n  color: ${PALETTE[3]};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledEditable = styled(ContentEditable)`\r\n  padding: 10px;\r\n  outline-color: ${PALETTE[3]};  \r\n`;\r\n\r\nconst ToHome = styled(Link)`\r\n  font-size: 24px;\r\n  color: ${PALETTE[3]};\r\n  &:hover{\r\n    color: ${PALETTE[2]};\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  background-color: ${PALETTE[1]};\r\n`;\r\n","import React from 'react';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport default function CardBody({ boardKey, listKey, cardKey }){\r\n  const { dispatch, findElement } = React.useContext(BoardListContext);\r\n  const { done, description } = findElement(boardKey, listKey, cardKey);\r\n  const [status, oppositeStatus] = done ? ['done', 'undone'] : ['undone', 'done'];\r\n  return (\r\n    <div>\r\n      <div>\r\n        Status: {status}\r\n        <button\r\n          onClick={() => dispatch({\r\n            type: \"TOGGLE_DONE\",\r\n            payload: {\r\n              boardKey: boardKey,\r\n              listKey: listKey,\r\n              cardKey: cardKey\r\n            }\r\n          })}\r\n        >\r\n          Mark it as {oppositeStatus}\r\n        </button>\r\n      </div>\r\n      <div>\r\n        Description: {description}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { PALETTE } from '../routes/Home';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { BoardListContext } from '../App';\r\nimport CardBody from '../components/CardBody';\r\n\r\nexport default function CardPage(){\r\n  const { dispatch, findElement } = React.useContext(BoardListContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { boardKey, listKey, cardKey } = location.state;\r\n  const { cardName } = findElement(boardKey, listKey, cardKey);\r\n  const [nextCardName, setNextCardName] = React.useState(cardName);\r\n  const nextCardNameRef = React.useRef();\r\n  const back = e => {\r\n    if(e.target!==e.currentTarget) return;\r\n    e.stopPropagation();\r\n    history.goBack();\r\n  }\r\n  const changeText = e => {\r\n    setNextCardName(e.target.value);\r\n  }\r\n  const disableNewLines = e => {\r\n    const keyCode = e.keyCode || e.which;\r\n    if (keyCode === 13) {\r\n      e.returnValue = false;\r\n      if (e.preventDefault) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  const editCardName = () => {\r\n    const nextCardName = nextCardNameRef.current.innerHTML;\r\n    if(!nextCardName) {\r\n      setNextCardName(cardName);\r\n      return;\r\n    }\r\n    else dispatch({\r\n      type: \"EDIT_CARD\",\r\n      payload: {\r\n        boardKey: boardKey,\r\n        listKey: listKey,\r\n        cardKey: cardKey,\r\n        newCardName: nextCardName,\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Full onClick={back}>\r\n      <Modal>\r\n        <CardHeader>\r\n          <StyledEditable \r\n            innerRef={nextCardNameRef}\r\n            html={nextCardName}\r\n            disabled={false}\r\n            onChange={changeText}\r\n            onBlur={editCardName}\r\n            onKeyPress={disableNewLines}\r\n            spellCheck='false'\r\n          />\r\n          <Button className=\"fas fa-times\" onClick={back}/>\r\n        </CardHeader>\r\n        <CardBody \r\n          boardKey={boardKey}\r\n          listKey={listKey}\r\n          cardKey={cardKey}\r\n        />\r\n      </Modal>\r\n    </Full>\r\n  );\r\n}\r\n\r\nconst Button = styled.i`\r\n  border: none;\r\n  background: none;\r\n  &:hover{\r\n      color: ${PALETTE[2]};\r\n  }\r\n  cursor: pointer;\r\n  color: ${PALETTE[3]};  \r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px; \r\n`;\r\n\r\nconst Full = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  position: absolute;\r\n  background: white;\r\n  top: 80px;\r\n  left: 10%;\r\n  right: 10%;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst CardHeader = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StyledEditable = styled(ContentEditable)`\r\n  padding: 5px;  \r\n  outline-color: ${PALETTE[3]};  \r\n`;","import React from 'react';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport Home from './routes/Home';\r\nimport BoardPage from './routes/BoardPage';\r\nimport CardPage from './routes/CardPage';\r\n\r\nexport default function Router(){\r\n  const location = useLocation();\r\n  const background = location.state && location.state.background;\r\n  return (\r\n    <>\r\n      <Switch location={background||location}>\r\n        <Route path=\"/\" exact={true} children={<Home />} />\r\n        <Route\r\n          path=\"/:boardKey/:boardName\"\r\n          children={<BoardPage />} \r\n        />\r\n      </Switch>\r\n      {background && \r\n      <Route \r\n        path=\"/:cardKey/:cardName\" \r\n        children={<CardPage />}\r\n      />}\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport reducer from './reducer';\r\nimport { GlobalStyle } from './styles/GlobalStyle';\r\nimport Router from './Router';\r\n\r\nexport const BoardListContext = React.createContext(\r\n  {\r\n    boardList: JSON.parse(localStorage.getItem('localBoardList')) || []\r\n  }\r\n);\r\n\r\nfunction App() {\r\n  const initialState = React.useContext(BoardListContext);\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n  const findElement = (boardKey=\"\", listKey=\"\", cardKey=\"\") => {\r\n    if(!boardKey) return state.boardList;\r\n    const board = state.boardList.find(board => board.boardKey===boardKey);\r\n    if(!listKey) return board;\r\n    const list = board.listList.find(list => list.listKey===listKey);\r\n    if(!cardKey) return list;\r\n    const card = list.cardList.find(card => card.cardKey===cardKey);\r\n    return card;\r\n  };\r\n  React.useEffect(() => {\r\n    localStorage.setItem('localBoardList', JSON.stringify(state.boardList));\r\n  }, [state]);\r\n  \r\n  return (\r\n    <BoardListContext.Provider value={{ dispatch, findElement }}>\r\n      <GlobalStyle />\r\n      <HashRouter>\r\n        <Router />\r\n      </HashRouter>\r\n    </BoardListContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}