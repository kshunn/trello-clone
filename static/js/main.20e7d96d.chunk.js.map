{"version":3,"sources":["components/Help.js","routes/Home.js","components/Card.js","components/List.js","components/Board.js","routes/BoardPage.js","reducer.js","styles/GlobalStyle.js","App.js","index.js"],"names":["Help","show","HelpContainer","showHelp","Bold","styled","div","ADD","DELETE","PIN","PALETTE","Home","boardList","dispatch","React","useContext","BoardListContext","useState","text","setText","setShowHelp","deleteBoard","key","window","confirm","type","payload","boardKey","Container","BoardsWrapper","Title","Boards","map","board","pin","BoardLink","ToBoard","to","pathname","boardName","Button","onClick","className","BoardAdder","BoardInput","value","onChange","e","target","placeholder","preventDefault","newBoardName","createNewBoard","HelpLink","button","Input","input","h2","Link","a","Card","listKey","cardKey","cardName","done","ICON","Cardtext","CardButton","props","List","listName","cardList","nextListName","setNextListName","nextListNameRef","useRef","ListContainer","ListTitle","StyledEditable","innerRef","html","disabled","onBlur","current","innerHTML","newListName","spellCheck","onKeyPress","keyCode","which","returnValue","droppableId","provided","ScrollView","ref","droppableProps","card","index","draggableId","snapshot","CardWrapper","draggableProps","dragHandleProps","isDragging","CardAdder","CardInput","newCardName","createNewCard","ContentEditable","h4","Board","listList","BoardContainer","onDragEnd","result","destination","source","startIndex","endIndex","startListKey","endListKey","direction","ListField","list","Wrapper","ListWrapper","ListAdder","ListInput","console","log","createNewList","BoardPage","history","match","find","Number","params","nextBoardName","setNextBoardName","nextBoardNameRef","push","BoardPageWrapper","Header","BoardTitle","ToHome","h1","header","reducer","state","action","length","newBoard","Date","now","forEach","newList","concat","newCard","filter","dragCard","splice","dragList","GlobalStyle","createGlobalStyle","createContext","JSON","parse","localStorage","getItem","App","initialState","useReducer","contextValue","useMemo","useEffect","setItem","stringify","Provider","path","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.20e7d96d.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PALETTE = ['#E9ECE5', '#C0DFD9', '#B3C2BF', '#3B3A36'];\r\n\r\nexport default function Help({show}){\r\n    return(\r\n        show ? (\r\n            <HelpContainer showHelp>\r\n                <Bold>Home Page</Bold>\r\n                Click on a board name to enter the board page<br/>\r\n                Pin important boards for quick access<br/><br/>\r\n                <Bold>Board Page</Bold>\r\n                Click on the board or list name to modify it<br/>\r\n                Drag and drop lists and cards to change their positions<br/><br/>\r\n                <Bold>Card Page</Bold>\r\n                Coming soon<br/>\r\n            </HelpContainer>\r\n        ) : null\r\n    ); \r\n}\r\n\r\nconst HelpContainer = styled.div`\r\n    position: fixed;\r\n    padding: 30px;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -90%);\r\n    background: ${PALETTE[2]};\r\n    display: block;\r\n    border-radius: 10px;\r\n    font-size: 16px;\r\n    opacity: 0.8;\r\n`;\r\n\r\nconst Bold = styled.div`\r\n    font-weight: bold;\r\n    text-decoration: underline;\r\n`;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport Help from '../components/Help';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport const ADD = 'fas fa-plus';\r\nexport const DELETE = \"fas fa-trash\";\r\nconst PIN = \"far fa-star\";\r\nconst PINNED = \"fas fa-star\";\r\nexport const PALETTE = ['#E9ECE5', '#C0DFD9', '#B3C2BF', '#3B3A36'];\r\n\r\nexport default function Home({ boardList }){\r\n    const { dispatch } = React.useContext(BoardListContext);\r\n    const [text, setText] = useState(\"\");\r\n    const [showHelp, setShowHelp] = useState(false);\r\n    const createNewBoard = text => {\r\n        dispatch({\r\n            type: \"ADD_BOARD\",\r\n            payload: {\r\n                newBoardName: text\r\n            }\r\n        });\r\n    };\r\n    const deleteBoard = key => {\r\n        const askDelete = window.confirm(\"Do you really want to remove the board?\");\r\n        if(askDelete){\r\n            dispatch({\r\n                type: \"DELETE_BOARD\",\r\n                payload: {\r\n                    boardKey: key\r\n                }\r\n            });\r\n        } \r\n    };\r\n    const onChange = e =>{\r\n        setText(e.target.value);\r\n    };\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createNewBoard(text);\r\n        setText(\"\");\r\n    };\r\n    return(\r\n        <Container>\r\n            <BoardsWrapper>\r\n                <Title>Pinned Boards</Title> \r\n                <Boards>  \r\n                {boardList.map(board => (\r\n                    board.pin ? (\r\n                        <BoardLink key={board.boardKey}>\r\n                            <ToBoard to={{\r\n                                pathname: `/board/${board.boardKey}`,\r\n                            }}>\r\n                                {board.boardName}\r\n                            </ToBoard>\r\n                            <Button\r\n                                onClick={() => dispatch({ \r\n                                    type: \"TOGGLE_PIN\",\r\n                                    payload: { boardKey: board.boardKey }\r\n                                })}\r\n                            >\r\n                                <i className={board.pin ? PINNED : PIN}></i>\r\n                            </Button>\r\n                            <Button onClick={() => deleteBoard(board.boardKey)}>\r\n                                <i className={DELETE}></i>\r\n                            </Button>\r\n                        </BoardLink>\r\n                    ) : null\r\n                ))}\r\n                </Boards>   \r\n            </BoardsWrapper> \r\n            <BoardsWrapper>\r\n                <Title>Boards</Title> \r\n                <Boards>  \r\n                {boardList.map(board => (\r\n                    <BoardLink key={board.boardKey}>\r\n                        <ToBoard to={{\r\n                            pathname: `/board/${board.boardKey}`,\r\n                        }}>\r\n                            {board.boardName}\r\n                        </ToBoard>\r\n                        <Button onClick={() => dispatch({\r\n                                type: \"TOGGLE_PIN\",\r\n                                payload: { boardKey: board.boardKey }\r\n                            })}\r\n                        >\r\n                            <i className={board.pin ? PINNED : PIN}></i>\r\n                        </Button>\r\n                        <Button onClick={() => deleteBoard(board.boardKey)}>\r\n                            <i className={DELETE}></i>\r\n                        </Button>\r\n                    </BoardLink>\r\n                ))}\r\n                <BoardAdder>\r\n                    <BoardInput type=\"text\" value={text} onChange={onChange} placeholder='Add a board..'/>\r\n                    <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n                </BoardAdder>\r\n                </Boards>   \r\n            </BoardsWrapper>\r\n            <HelpLink\r\n                onClick={() => setShowHelp(!showHelp)}\r\n            >\r\n                {showHelp ? 'Hide' : 'Tips'}\r\n            </HelpLink>\r\n            <Help show={showHelp}/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    background: none;\r\n    &:hover{\r\n        color: ${PALETTE[2]};\r\n    }\r\n    cursor: pointer;\r\n    color: ${PALETTE[3]};  \r\n    outline: none;  \r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border: none;\r\n    padding: 5px;\r\n    background: none;\r\n    font-family: 'Open Sans', 'Noto Sans KR';\r\n    &::placeholder{\r\n        color: ${PALETTE[2]};\r\n    }\r\n    outline-color: ${PALETTE[3]};\r\n`;\r\n\r\nconst Title = styled.h2`\r\n    color: ${PALETTE[3]};\r\n`;\r\n\r\nconst BoardInput = styled(Input)`\r\n    text-align: center;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    margin: auto 0;\r\n`;\r\n\r\nconst ToBoard = styled(Link)`\r\n    color: ${PALETTE[3]};\r\n    text-decoration: none;\r\n    &:hover{\r\n        color: ${PALETTE[2]};\r\n    }\r\n    margin: auto;\r\n    font-weight: bold;\r\n    word-wrap: break-word;\r\n    word-break: break-word;\r\n    text-align: center;\r\n`;\r\n\r\nconst BoardAdder = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin: 10px;\r\n    padding: 20px;\r\n    border-radius: 20px;\r\n    width: 200px;\r\n    height: 80px;\r\n    background-color: white;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 40px;\r\n`;\r\n\r\nconst BoardLink = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 10px;\r\n    padding: 20px;\r\n    border-radius: 20px;\r\n    width: 200px;\r\n    height: 80px;\r\n    background-color: white;\r\n`;\r\n\r\nconst Boards = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n`;\r\n\r\nconst BoardsWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    align-items: center;\r\n    border-radius: 20px;\r\n    background-color: ${PALETTE[1]};\r\n    margin: 10px 0;\r\n`;\r\n\r\nconst HelpLink = styled.a`\r\n    padding-top: 20px;\r\n    font-size: 14px;\r\n    color: ${PALETTE[3]};\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    text-decoration: underline;\r\n`;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Button, PALETTE} from '../routes/Home';\r\nimport { BoardListContext } from '../App';\r\n\r\nconst CHECK = \"fas fa-check\";\r\nconst DONE = \"fas fa-times\";\r\n\r\nexport default function Card({ boardKey, listKey, cardKey, cardName, done }){\r\n    const { dispatch } = React.useContext(BoardListContext);\r\n    const ICON = done ? DONE : CHECK;\r\n    return (\r\n        <>\r\n            <Cardtext done={done}>{cardName}</Cardtext>\r\n            <CardButton\r\n                done={done}\r\n                onClick={() => dispatch({\r\n                    type: \"TOGGLE_DONE\",\r\n                    payload: {\r\n                        boardKey: boardKey,\r\n                        listKey: listKey,\r\n                        cardKey: cardKey\r\n                    }\r\n                })}\r\n            >\r\n                <i className={ICON}></i>\r\n            </CardButton>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Cardtext = styled.div`\r\n    width: 100%;\r\n    padding: 5px;\r\n    text-align: left;\r\n    font-size: 14px;\r\n    text-decoration: ${props => (props.done ? 'line-through' : 'none')};\r\n`;\r\n\r\nconst CardButton = styled(Button)`\r\n    &:hover{\r\n        color: ${PALETTE[0]};\r\n    }\r\n`;","import React, { useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from './Card';\r\nimport {Button, Input, ADD, DELETE, PALETTE} from '../routes/Home';\r\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport default function List({boardKey, listKey, listName, cardList}){\r\n    const { dispatch } = React.useContext(BoardListContext);\r\n    const [text, setText] = useState(\"\");\r\n    const [nextListName, setNextListName] = useState(listName);\r\n    const nextListNameRef = useRef();\r\n    const createNewCard = text => {\r\n        dispatch({\r\n            type: \"ADD_CARD\",\r\n            payload: {\r\n                newCardName: text,\r\n                boardKey: boardKey,\r\n                listKey: listKey,\r\n            }\r\n        });\r\n    };\r\n    const onChange = e =>{\r\n        setText(e.target.value);\r\n    };\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createNewCard(text);\r\n        setText(\"\");\r\n    };\r\n    const deleteCard = (key) => {\r\n        const askDelete = window.confirm(\"Do you really want to remove the card?\");\r\n        if(askDelete){\r\n            dispatch({\r\n                type: \"DELETE_CARD\",\r\n                payload: {\r\n                    boardKey: boardKey,\r\n                    listKey: listKey,\r\n                    cardKey: key\r\n                }\r\n            });\r\n        }\r\n    };\r\n    const changeText = e => {\r\n        setNextListName(e.target.value);\r\n    };\r\n    const editListName = () => {\r\n        const nextListName = nextListNameRef.current.innerHTML;\r\n        if(!nextListName){\r\n            setNextListName(listName);\r\n            return;\r\n        }\r\n        else dispatch({\r\n            type: \"EDIT_LIST\",\r\n            payload: {\r\n                newListName: nextListName,\r\n                boardKey: boardKey,\r\n                listKey: listKey,\r\n            }\r\n        });\r\n    }\r\n    const disableNewLines = e => {\r\n        const keyCode = e.keyCode || e.which;\r\n        if (keyCode === 13) {\r\n          e.returnValue = false;\r\n          if (e.preventDefault){\r\n              e.preventDefault();\r\n          }\r\n        }\r\n    }\r\n    return (\r\n        <ListContainer>\r\n            <ListTitle>\r\n                <StyledEditable\r\n                    innerRef={nextListNameRef}\r\n                    html={nextListName}\r\n                    disabled={false}\r\n                    onChange={changeText}\r\n                    onBlur={editListName}\r\n                    spellCheck='false'\r\n                    onKeyPress={disableNewLines}\r\n                />\r\n            </ListTitle>\r\n            <Droppable droppableId={listKey} type=\"card\">\r\n                {(provided) => (\r\n                    <ScrollView\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                    >\r\n                        {cardList.map((card, index) => (\r\n                            <Draggable key={card.cardKey} draggableId={card.cardKey} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                    <CardWrapper\r\n                                        key={card.cardKey}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        ref={provided.innerRef}\r\n                                        isDragging={snapshot.isDragging}\r\n                                    >\r\n                                        <Card \r\n                                            boardKey={boardKey}\r\n                                            listKey={listKey}\r\n                                            {...card}\r\n                                        />\r\n                                        <CardButton onClick={()=>deleteCard(card.cardKey)}>\r\n                                            <i className={DELETE}></i>\r\n                                        </CardButton>\r\n                                    </CardWrapper>\r\n                                )}\r\n\r\n                            </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </ScrollView>\r\n                )}\r\n            </Droppable>\r\n            <CardAdder>\r\n                <CardInput type=\"text\" value={text} onChange={onChange} placeholder='Add a card..' />\r\n                <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n            </CardAdder>\r\n        </ListContainer>\r\n    );\r\n\r\n}\r\n\r\nconst ListContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    word-wrap: break-word;\r\n    word-break: break-word;\r\n    max-height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin: 5px 0;\r\n    border-radius: 5px;\r\n    background-color: ${PALETTE[2]};\r\n    padding: 10px;\r\n    color: ${PALETTE[3]};\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst ScrollView = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    overflow-y: auto;\r\n    min-height: 1px;\r\n`;\r\n\r\nconst CardAdder = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 5px;\r\n    width: 100%;\r\n    margin: 5px 0 10px 0;\r\n    background-color: ${PALETTE[0]};\r\n    padding: 10px;\r\n    color: white;\r\n`;\r\n\r\nconst CardInput = styled(Input)`\r\n    width: 100%;\r\n`;\r\n\r\nconst CardButton = styled(Button)`\r\n    &:hover{\r\n        color: ${PALETTE[0]};\r\n    }\r\n`;\r\n\r\nconst StyledEditable = styled(ContentEditable)`\r\n    padding: 5px;  \r\n    outline-color: ${PALETTE[3]};  \r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n    cursor: pointer;\r\n    width: 100%;\r\n    text-align: left;\r\n    margin: 5px 0;\r\n`;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport List from './List';\r\nimport {Button, Input, ADD, DELETE} from '../routes/Home';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport default function Board({boardKey, listList}) {\r\n    const { dispatch } = React.useContext(BoardListContext);\r\n    const [text, setText] = useState(\"\");\r\n    const createNewList = text => {\r\n        dispatch({\r\n            type: \"ADD_LIST\",\r\n            payload: {\r\n                newListName: text,\r\n                boardKey: boardKey\r\n            }\r\n        });\r\n        console.log(listList);\r\n    };\r\n    const deleteList = (key) => {\r\n        const askDelete = window.confirm(\"Do you really want to remove the list?\");\r\n        if(askDelete) {\r\n            dispatch({\r\n                type: \"DELETE_LIST\",\r\n                payload: {\r\n                    boardKey: boardKey,\r\n                    listKey: key\r\n                }\r\n            });\r\n        }\r\n    };\r\n    const onChange = e =>{\r\n        setText(e.target.value);\r\n    };\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createNewList(text);\r\n        setText(\"\");\r\n    };\r\n    const onDragEnd = result => {\r\n        const { destination, source, type } = result;\r\n        if(!destination){\r\n            return;\r\n        }\r\n        if(destination.droppableId===source.droppableId && destination.index===source.index){\r\n            return;\r\n        }\r\n        if(type==='card'){\r\n            dispatch({\r\n                type: \"SWITCH_CARD\",\r\n                payload: {\r\n                    boardKey: boardKey,\r\n                    startListKey: source.droppableId,\r\n                    endListKey: destination.droppableId,\r\n                    startIndex: source.index,\r\n                    endIndex: destination.index\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        else if(type==='list'){\r\n            dispatch({\r\n                type: \"SWITCH_LIST\",\r\n                payload: {\r\n                    boardKey: boardKey,\r\n                    startIndex: source.index,\r\n                    endIndex: destination.index\r\n                }\r\n            });\r\n            return;\r\n        }\r\n    };\r\n\r\n    return(\r\n        <BoardContainer>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <Droppable droppableId=\"lists\" direction=\"horizontal\" type=\"list\">\r\n                    {(provided) => (\r\n                        <ListField\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n                            {listList.map((list, index) => (\r\n                                <Draggable key={list.listKey} draggableId={list.listKey} index={index}>\r\n                                    {(provided) => (\r\n                                        <Wrapper>\r\n                                            <ListWrapper\r\n                                                {...provided.draggableProps}\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.dragHandleProps}\r\n                                            >\r\n                                                <List\r\n                                                    boardKey={boardKey}\r\n                                                    {...list}\r\n                                                />\r\n                                                <Button onClick={() => deleteList(list.listKey)}>\r\n                                                    <i className={DELETE}></i>\r\n                                                </Button>\r\n                                            </ListWrapper>\r\n                                        </Wrapper>\r\n                                    )}\r\n                                </Draggable>        \r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </ListField>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n            <div>\r\n                <ListAdder>\r\n                    <ListInput type=\"text\" value={text} onChange={onChange} placeholder='Add a list..'/>\r\n                    <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n                </ListAdder>\r\n            </div>\r\n        </BoardContainer>\r\n    );\r\n\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    height: 100%;\r\n    padding-bottom: 10px;\r\n`;\r\n\r\nconst BoardContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    padding: 0 10px;\r\n    overflow-x: auto;\r\n    overflow-y: hidden;\r\n    height: 100%;\r\n`;\r\n\r\nconst ListAdder = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 20px 0 10px;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    padding: 10px 10px 5px 10px;\r\n    width: 230px;\r\n`;\r\n\r\nconst ListWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 10px;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    background-color: white;\r\n    min-width: 230px;\r\n    max-width: 230px;\r\n    max-height: 100%;\r\n`;\r\n\r\nconst ListInput = styled(Input)`\r\n    margin-bottom: 5px;\r\n    text-align: center;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst ListField = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    height: 100%;\r\n`;","import React, {useState, useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport Board from '../components/Board';\r\nimport {Link} from 'react-router-dom';\r\nimport {PALETTE} from './Home';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport default function BoardPage({history, match, boardList}){\r\n    const { dispatch } = React.useContext(BoardListContext);\r\n    const board = boardList.find(board => board.boardKey===Number(match.params.boardKey));\r\n    const [nextBoardName, setNextBoardName] = useState(board ? board.boardName : null);\r\n    const nextBoardNameRef = useRef();\r\n    if(!board){\r\n        history.push(\"/\");\r\n        return null;\r\n    }\r\n    const editBoardName = () => {\r\n        const nextBoardName = nextBoardNameRef.current.innerHTML;\r\n        if(!nextBoardName){\r\n            setNextBoardName(board.boardName);\r\n            return;\r\n        }\r\n        else dispatch({\r\n            type: \"EDIT_BOARD\",\r\n            payload: {\r\n                boardKey: board.boardKey,\r\n                newBoardName: nextBoardName\r\n            }\r\n        });\r\n    };\r\n    const changeText = e => {\r\n        setNextBoardName(e.target.value);\r\n    }\r\n    const disableNewLines = e => {\r\n        const keyCode = e.keyCode || e.which;\r\n        if (keyCode === 13) {\r\n          e.returnValue = false;\r\n          if (e.preventDefault){\r\n              e.preventDefault();\r\n          }\r\n        }\r\n    }\r\n    return (\r\n        <BoardPageWrapper>\r\n            <Header>\r\n                <BoardTitle>\r\n                    <StyledEditable\r\n                        innerRef={nextBoardNameRef}\r\n                        html={nextBoardName}\r\n                        disabled={false}\r\n                        onChange={changeText}\r\n                        onBlur={editBoardName}\r\n                        onKeyPress={disableNewLines}\r\n                        spellCheck='false'\r\n                    />\r\n                </BoardTitle>\r\n                <ToHome to={{pathname: '/'}}><i className=\"fas fa-home\"></i></ToHome>\r\n            </Header>\r\n            <Board \r\n                boardKey={board.boardKey}\r\n                listList={board.listList}\r\n            />\r\n        </BoardPageWrapper>\r\n    );\r\n}\r\n\r\nconst BoardPageWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n    text-align: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst BoardTitle = styled.h1`\r\n    font-size: 24px;\r\n    margin: auto;\r\n    padding: 10px 20px;\r\n    color: ${PALETTE[3]};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst StyledEditable = styled(ContentEditable)`\r\n    padding: 10px;\r\n    outline-color: ${PALETTE[3]};  \r\n`;\r\n\r\nconst ToHome = styled(Link)`\r\n    font-size: 24px;\r\n    color: ${PALETTE[3]};\r\n    &:hover{\r\n        color: ${PALETTE[2]};\r\n    }\r\n`;\r\n\r\nconst Header = styled.header`\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0 20px;\r\n    background-color: ${PALETTE[1]};\r\n`;\r\n","function reducer(state, action){\r\n  switch(action.type){\r\n    case \"ADD_BOARD\": {\r\n      const { newBoardName } = action.payload;\r\n      if(newBoardName.length){\r\n        const newBoard = {\r\n          boardKey: Date.now(),\r\n          boardName: newBoardName,\r\n          listList: [],\r\n          pin: false,\r\n        }\r\n        return { boardList: [...state.boardList, newBoard] };\r\n      }\r\n      break;\r\n    }\r\n    case \"ADD_LIST\": {\r\n      const { newListName, boardKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          if(newListName.length){\r\n            const newList = {\r\n              listKey: newListName.concat(Date.now()),\r\n              listName: newListName,\r\n              cardList: []\r\n            }\r\n            board.listList.push(newList);\r\n          }\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"ADD_CARD\": {\r\n      const { newCardName, boardKey, listKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              if(newCardName.length){\r\n                const newCard = {\r\n                  cardKey: newCardName.concat(Date.now()),\r\n                  cardName: newCardName,\r\n                  done: false\r\n                }\r\n                list.cardList.push(newCard);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};  \r\n    }\r\n    case \"DELETE_BOARD\": {\r\n      const { boardKey } = action.payload;\r\n      const newBoardList = state.boardList.filter(board => board.boardKey!==boardKey);\r\n      return { boardList: newBoardList };\r\n    }\r\n    case \"DELETE_LIST\": {\r\n      const { boardKey, listKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList = board.listList.filter(list => list.listKey !== listKey);\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"DELETE_CARD\": {\r\n      const { boardKey, listKey, cardKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              list.cardList = list.cardList.filter(card => card.cardKey !== cardKey);\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"EDIT_BOARD\": {\r\n      const { boardKey, newBoardName } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.boardName = newBoardName;\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"EDIT_LIST\": {\r\n      const { boardKey, listKey, newListName } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              list.listName = newListName;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"EDIT_CARD\": {\r\n      const { boardKey, listKey, cardKey, newCardName } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              list.cardList.forEach(card => {\r\n                if(card.cardKey===cardKey){\r\n                  card.cardName = newCardName;\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"TOGGLE_PIN\": {\r\n      const { boardKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.pin = !board.pin;\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"TOGGLE_DONE\": {\r\n      const { boardKey, listKey, cardKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              list.cardList.forEach(card => {\r\n                if(card.cardKey===cardKey){\r\n                  card.done = !card.done;\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"SWITCH_CARD\": {\r\n      const { boardKey, startListKey, endListKey, startIndex, endIndex } = action.payload;\r\n      let dragCard = null;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===startListKey){\r\n              dragCard = list.cardList[startIndex];\r\n              list.cardList.splice(startIndex, 1);\r\n              if(startListKey===endListKey){\r\n                list.cardList.splice(endIndex, 0, dragCard);\r\n              }\r\n              else{\r\n                board.listList.forEach(list => {\r\n                  if(list.listKey===endListKey){\r\n                    list.cardList.splice(endIndex, 0, dragCard);\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"SWITCH_LIST\": {\r\n      const { boardKey, startIndex, endIndex } = action.payload;\r\n      let dragList = null;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          dragList = board.listList[startIndex];\r\n          board.listList.splice(startIndex, 1);\r\n          board.listList.splice(endIndex, 0, dragList);\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { createGlobalStyle } from \"styled-components\";\r\nimport { PALETTE } from '../routes/Home';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    *{\r\n      box-sizing: border-box;\r\n    }\r\n    html{\r\n      height: 100%;\r\n    }\r\n    body{\r\n        padding: 0;\r\n        margin: 0;\r\n        font-family: 'Open Sans', 'Noto Sans KR';\r\n        background-color: ${PALETTE[0]};\r\n        height: 100%;\r\n    }\r\n    #root{\r\n      height: 100%;\r\n    }\r\n    ::-webkit-scrollbar{\r\n      background: none;\r\n      height: 14px;\r\n    }\r\n    ::-webkit-scrollbar-track{\r\n      box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.2);\r\n      border-radius: 10px;\r\n    }\r\n    ::-webkit-scrollbar-thumb{\r\n      background: rgba(0, 0, 0, 0.15);\r\n      border-radius: 10px;\r\n    }\r\n`;","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport Home from './routes/Home';\r\nimport BoardPage from './routes/BoardPage';\r\nimport reducer from './reducer';\r\nimport { GlobalStyle } from './styles/GlobalStyle';\r\n\r\nexport const BoardListContext = React.createContext(\r\n  {\r\n      boardList: JSON.parse(localStorage.getItem('localBoardList')) || []\r\n  }\r\n);\r\n\r\nfunction App() {\r\n    const initialState = React.useContext(BoardListContext);\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const contextValue = React.useMemo(() => {\r\n      return { state, dispatch };\r\n    }, [state, dispatch]);\r\n    React.useEffect(() => {\r\n      localStorage.setItem('localBoardList', JSON.stringify(state.boardList));\r\n    }, [state]);\r\n    return (\r\n        <BoardListContext.Provider value={contextValue}>\r\n            <GlobalStyle />\r\n            <HashRouter>\r\n              <Route path=\"/\" exact={true} render={props => <Home {...props} boardList={state.boardList} />} />\r\n              <Route path=\"/board/:boardKey\" render={props => <BoardPage {...props} boardList={state.boardList} />} />\r\n            </HashRouter>\r\n        </BoardListContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}