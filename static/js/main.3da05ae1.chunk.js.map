{"version":3,"sources":["reducer.js","components/Help.js","routes/Home.js","styles/GlobalStyle.js","components/Card.js","components/List.js","components/Board.js","routes/BoardPage.js","routes/CardPage.js","Router.js","App.js","index.js"],"names":["reducer","state","action","type","newBoardName","payload","length","newBoard","boardKey","Date","now","boardName","listList","pin","boardList","newListName","forEach","board","newList","listKey","String","listName","cardList","push","newCardName","list","newCard","cardKey","cardName","done","filter","card","startListKey","endListKey","startIndex","endIndex","dragCard","splice","dragList","Help","show","HelpContainer","showHelp","Bold","styled","div","ADD","DELETE","PIN","PALETTE","Home","dispatch","React","useContext","BoardListContext","useState","text","setText","setShowHelp","deleteBoard","key","window","confirm","Container","BoardsWrapper","Title","Boards","map","BoardLink","ToBoard","to","pathname","Button","onClick","className","BoardAdder","BoardInput","value","onChange","e","target","placeholder","preventDefault","createNewBoard","HelpLink","button","Input","input","h2","Link","a","GlobalStyle","createGlobalStyle","Card","location","useLocation","ICON","Cardtext","background","CardButton","props","List","nextListName","setNextListName","nextListNameRef","useRef","ListContainer","ListTitle","StyledEditable","innerRef","html","disabled","onBlur","current","innerHTML","spellCheck","onKeyPress","keyCode","which","returnValue","droppableId","provided","ScrollView","ref","droppableProps","index","draggableId","snapshot","CardWrapper","draggableProps","dragHandleProps","isDragging","CardAdder","CardInput","createNewCard","ContentEditable","h4","Board","BoardContainer","onDragEnd","result","destination","source","direction","ListField","Wrapper","ListWrapper","ListAdder","ListInput","console","log","createNewList","BoardPage","useParams","history","useHistory","find","Number","nextBoardName","setNextBoardName","nextBoardNameRef","BoardPageWrapper","Header","BoardTitle","ToHome","h1","header","CardPage","back","event","stopPropagation","goBack","Full","Modal","Router","path","exact","render","createContext","JSON","parse","localStorage","getItem","App","initialState","useReducer","contextValue","useMemo","useEffect","setItem","stringify","Provider","ReactDOM","document","getElementById"],"mappings":"iOAyLeA,MAzLf,SAAiBC,EAAOC,GACtB,OAAOA,EAAOC,MACZ,IAAK,YAAc,IACTC,EAAiBF,EAAOG,QAAxBD,aACR,GAAGA,EAAaE,OAAO,CACrB,IAAMC,EAAW,CACfC,SAAUC,KAAKC,MACfC,UAAWP,EACXQ,SAAU,GACVC,KAAK,GAEP,MAAO,CAAEC,UAAU,GAAD,mBAAMb,EAAMa,WAAZ,CAAuBP,KAE3C,MAEF,IAAK,WAAa,IAAD,EACmBL,EAAOG,QAAjCU,EADO,EACPA,YAAaP,EADN,EACMA,SAarB,OAZAP,EAAMa,UAAUE,SAAQ,SAAAC,GACtB,GAAGA,EAAMT,WAAWA,GACfO,EAAYT,OAAO,CACpB,IAAMY,EAAU,CACdC,QAASC,OAAOX,KAAKC,OACrBW,SAAUN,EACVO,SAAU,IAEZL,EAAML,SAASW,KAAKL,OAInB,eAAIjB,GAEb,IAAK,WAAa,IAAD,EAC4BC,EAAOG,QAA1CmB,EADO,EACPA,YAAahB,EADN,EACMA,SAAUW,EADhB,EACgBA,QAiB/B,OAhBAlB,EAAMa,UAAUE,SAAQ,SAAAC,GACnBA,EAAMT,WAAWA,GAClBS,EAAML,SAASI,SAAQ,SAAAS,GACrB,GAAGA,EAAKN,UAAUA,GACbK,EAAYlB,OAAO,CACpB,IAAMoB,EAAU,CACdC,QAASP,OAAOX,KAAKC,OACrBkB,SAAUJ,EACVK,MAAM,GAERJ,EAAKH,SAASC,KAAKG,UAMtB,eAAIzB,GAEb,IAAK,eAAiB,IACZO,EAAaN,EAAOG,QAApBG,SAER,MAAO,CAAEM,UADYb,EAAMa,UAAUgB,QAAO,SAAAb,GAAK,OAAIA,EAAMT,WAAWA,MAGxE,IAAK,cAAgB,IAAD,EACYN,EAAOG,QAA7BG,EADU,EACVA,SAAUW,EADA,EACAA,QAMlB,OALAlB,EAAMa,UAAUE,SAAQ,SAAAC,GACnBA,EAAMT,WAAWA,IAClBS,EAAML,SAAWK,EAAML,SAASkB,QAAO,SAAAL,GAAI,OAAIA,EAAKN,UAAYA,SAG7D,eAAIlB,GAEb,IAAK,cAAgB,IAAD,EACqBC,EAAOG,QAAtCG,EADU,EACVA,SAAUW,EADA,EACAA,QAASQ,EADT,EACSA,QAU3B,OATA1B,EAAMa,UAAUE,SAAQ,SAAAC,GACnBA,EAAMT,WAAWA,GAClBS,EAAML,SAASI,SAAQ,SAAAS,GAClBA,EAAKN,UAAUA,IAChBM,EAAKH,SAAWG,EAAKH,SAASQ,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,UAAYA,YAK/D,eAAI1B,GAEb,IAAK,aAAe,IAAD,EACkBC,EAAOG,QAAlCG,EADS,EACTA,SAAUJ,EADD,EACCA,aAMlB,OALAH,EAAMa,UAAUE,SAAQ,SAAAC,GACnBA,EAAMT,WAAWA,IAClBS,EAAMN,UAAYP,MAGf,eAAIH,GAEb,IAAK,YAAc,IAAD,EAC2BC,EAAOG,QAA1CG,EADQ,EACRA,SAAUW,EADF,EACEA,QAASJ,EADX,EACWA,YAU3B,OATAd,EAAMa,UAAUE,SAAQ,SAAAC,GACnBA,EAAMT,WAAWA,GAClBS,EAAML,SAASI,SAAQ,SAAAS,GAClBA,EAAKN,UAAUA,IAChBM,EAAKJ,SAAWN,SAKjB,eAAId,GAEb,IAAK,YAAc,IAAD,EACoCC,EAAOG,QAAnDG,EADQ,EACRA,SAAUW,EADF,EACEA,QAASQ,EADX,EACWA,QAASH,EADpB,EACoBA,YAcpC,OAbAvB,EAAMa,UAAUE,SAAQ,SAAAC,GACnBA,EAAMT,WAAWA,GAClBS,EAAML,SAASI,SAAQ,SAAAS,GAClBA,EAAKN,UAAUA,GAChBM,EAAKH,SAASN,SAAQ,SAAAe,GACjBA,EAAKJ,UAAUA,IAChBI,EAAKH,SAAWJ,YAOrB,eAAIvB,GAEb,IAAK,aAAe,IACVO,EAAaN,EAAOG,QAApBG,SAMR,OALAP,EAAMa,UAAUE,SAAQ,SAAAC,GACnBA,EAAMT,WAAWA,IAClBS,EAAMJ,KAAOI,EAAMJ,QAGhB,eAAIZ,GAEb,IAAK,cAAgB,IAAD,EACqBC,EAAOG,QAAtCG,EADU,EACVA,SAAUW,EADA,EACAA,QAASQ,EADT,EACSA,QAc3B,OAbA1B,EAAMa,UAAUE,SAAQ,SAAAC,GACnBA,EAAMT,WAAWA,GAClBS,EAAML,SAASI,SAAQ,SAAAS,GAClBA,EAAKN,UAAUA,GAChBM,EAAKH,SAASN,SAAQ,SAAAe,GACjBA,EAAKJ,UAAUA,IAChBI,EAAKF,MAAQE,EAAKF,eAOvB,eAAI5B,GAEb,IAAK,cAAgB,IAAD,EACmDC,EAAOG,QAApEG,EADU,EACVA,SAAUwB,EADA,EACAA,aAAcC,EADd,EACcA,WAAYC,EAD1B,EAC0BA,WAAYC,EADtC,EACsCA,SACpDC,EAAW,KAqBf,OApBAnC,EAAMa,UAAUE,SAAQ,SAAAC,GACnBA,EAAMT,WAAWA,GAClBS,EAAML,SAASI,SAAQ,SAAAS,GAClBA,EAAKN,UAAUa,IAChBI,EAAWX,EAAKH,SAASY,GACzBT,EAAKH,SAASe,OAAOH,EAAY,GAC9BF,IAAeC,EAChBR,EAAKH,SAASe,OAAOF,EAAU,EAAGC,GAGlCnB,EAAML,SAASI,SAAQ,SAAAS,GAClBA,EAAKN,UAAUc,GAChBR,EAAKH,SAASe,OAAOF,EAAU,EAAGC,aAQzC,eAAInC,GAEb,IAAK,cAAgB,IAAD,EACyBC,EAAOG,QAA1CG,EADU,EACVA,SAAU0B,EADA,EACAA,WAAYC,EADZ,EACYA,SAC1BG,EAAW,KAQf,OAPArC,EAAMa,UAAUE,SAAQ,SAAAC,GACnBA,EAAMT,WAAWA,IAClB8B,EAAWrB,EAAML,SAASsB,GAC1BjB,EAAML,SAASyB,OAAOH,EAAY,GAClCjB,EAAML,SAASyB,OAAOF,EAAU,EAAGG,OAGhC,eAAIrC,GAEb,QACE,OAAOA,I,2ZChLE,SAASsC,EAAT,GACb,OADqC,EAARC,KAGzB,kBAACC,EAAD,CAAeC,UAAQ,GACrB,kBAACC,EAAD,kBADF,gDAEiD,6BAFjD,wCAGyC,6BAAM,6BAC7C,kBAACA,EAAD,mBAJF,+CAKgD,6BALhD,0DAM2D,6BAAM,6BAC/D,kBAACA,EAAD,kBAPF,cAQe,8BAEb,KAIR,IAAMF,EAAgBG,IAAOC,IAAV,IAnBoB,WAgCjCF,EAAOC,IAAOC,IAAV,K,wuEC7BH,IAAMC,EAAM,cACNC,EAAS,eAChBC,EAAM,cAECC,EAAU,CAAC,UAAW,UAAW,UAAW,WAE1C,SAASC,EAAT,GAA8B,IAAdpC,EAAa,EAAbA,UACrBqC,EAAaC,IAAMC,WAAWC,IAA9BH,SADkC,EAElBI,mBAAS,IAFS,mBAEnCC,EAFmC,KAE7BC,EAF6B,OAGVF,oBAAS,GAHC,mBAGnCb,EAHmC,KAGzBgB,EAHyB,KAYpCC,EAAc,SAAAC,GACAC,OAAOC,QAAQ,4CAE/BX,EAAS,CACPhD,KAAM,eACNE,QAAS,CACPG,SAAUoD,MAalB,OACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,sBACA,kBAACC,EAAD,KACGpD,EAAUqD,KAAI,SAAAlD,GAAK,OAClBA,EAAMJ,IACJ,kBAACuD,EAAD,CAAWR,IAAK3C,EAAMT,UACpB,kBAAC6D,EAAD,CAASC,GAAI,CACXC,SAAS,IAAD,OAAMtD,EAAMT,SAAZ,YAAwBS,EAAMN,aAErCM,EAAMN,WAET,kBAAC6D,EAAD,CACEC,QAAS,kBAAMtB,EAAS,CACtBhD,KAAM,aACNE,QAAS,CAAEG,SAAUS,EAAMT,cAG7B,uBAAGkE,UAAWzD,EAAMJ,IArDvB,cAqDsCmC,KAErC,kBAACwB,EAAD,CAAQC,QAAS,kBAAMd,EAAY1C,EAAMT,YACvC,uBAAGkE,UAAW3B,MAGhB,UAIV,kBAACiB,EAAD,KACE,kBAACC,EAAD,eACA,kBAACC,EAAD,KACGpD,EAAUqD,KAAI,SAAAlD,GAAK,OAClB,kBAACmD,EAAD,CAAWR,IAAK3C,EAAMT,UACpB,kBAAC6D,EAAD,CAASC,GAAI,CACXC,SAAS,IAAD,OAAMtD,EAAMT,SAAZ,YAAwBS,EAAMN,aAErCM,EAAMN,WAET,kBAAC6D,EAAD,CAAQC,QAAS,kBAAMtB,EAAS,CAC9BhD,KAAM,aACNE,QAAS,CAAEG,SAAUS,EAAMT,cAG3B,uBAAGkE,UAAWzD,EAAMJ,IA9ErB,cA8EoCmC,KAErC,kBAACwB,EAAD,CAAQC,QAAS,kBAAMd,EAAY1C,EAAMT,YACvC,uBAAGkE,UAAW3B,SAIpB,kBAAC4B,EAAD,KACE,kBAACC,EAAD,CAAYzE,KAAK,OAAO0E,MAAOrB,EAAMsB,SA5D9B,SAAAC,GACftB,EAAQsB,EAAEC,OAAOH,QA2DgDI,YAAY,kBACrE,kBAACT,EAAD,CAAQC,QA1DD,SAAAM,GACfA,EAAEG,iBAvBmB,SAAA1B,GACrBL,EAAS,CACPhD,KAAM,YACNE,QAAS,CACPD,aAAcoD,KAoBlB2B,CAAe3B,GACfC,EAAQ,MAuD2B,uBAAGiB,UAAW5B,QAI/C,kBAACsC,EAAD,CACEX,QAAS,kBAAMf,GAAahB,KAE3BA,EAAW,OAAS,QAEvB,kBAACH,EAAD,CAAMC,KAAME,KAKX,IAAM8B,EAAS5B,IAAOyC,OAAV,IAIJpC,EAAQ,GAGZA,EAAQ,IAINqC,EAAQ1C,IAAO2C,MAAV,IAMHtC,EAAQ,GAEJA,EAAQ,IAGrBgB,EAAQrB,IAAO4C,GAAV,IACAvC,EAAQ,IAGb2B,EAAahC,YAAO0C,EAAP1C,CAAH,KAQVyB,EAAUzB,YAAO6C,IAAP7C,CAAH,IACFK,EAAQ,GAGJA,EAAQ,IASjB0B,EAAa/B,IAAOC,IAAV,KAaVkB,EAAYnB,IAAOC,IAAV,KASTuB,EAAYxB,IAAOC,IAAV,KAYTqB,EAAStB,IAAOC,IAAV,KAKNmB,EAAgBpB,IAAOC,IAAV,IAMGI,EAAQ,IAIxBmC,EAAWxC,IAAO8C,EAAV,IAGHzC,EAAQ,I,0lBC9MZ,IAAM0C,EAAcC,YAAH,IAWA3C,EAAQ,I,0SCLjB,SAAS4C,EAAT,GAA+D,IAA/CrF,EAA8C,EAA9CA,SAAUW,EAAoC,EAApCA,QAASQ,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAC7DiE,EAAWC,cACT5C,EAAaC,IAAMC,WAAWC,IAA9BH,SACF6C,EAAOnE,EALF,eADC,eAOZ,OACE,oCACE,kBAACoE,EAAD,CACEpE,KAAMA,EACNyC,GAAI,CACFC,SAAS,IAAD,OAAM5C,EAAN,YAAiBC,GACzB3B,MAAO,CACLiG,WAAYJ,EACZlE,SAAUA,KAIbA,GAEH,kBAACuE,EAAD,CACEtE,KAAMA,EACN4C,QAAS,kBAAMtB,EAAS,CACtBhD,KAAM,cACNE,QAAS,CACPG,SAAUA,EACVW,QAASA,EACTQ,QAASA,OAIb,uBAAG+C,UAAWsB,MAMtB,IAAMC,EAAWrD,YAAO6C,IAAP7C,CAAH,KAKO,SAAAwD,GAAK,OAAKA,EAAMvE,KAAO,eAAiB,SAClDoB,EAAQ,IAGbkD,EAAavD,YAAO4B,EAAP5B,CAAH,IAEHK,EAAQ,I,kjDC/CN,SAASoD,GAAT,GAA0D,IAA1C7F,EAAyC,EAAzCA,SAAUW,EAA+B,EAA/BA,QAASE,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAClD6B,EAAaC,IAAMC,WAAWC,IAA9BH,SAD8D,EAE9CI,mBAAS,IAFqC,mBAE/DC,EAF+D,KAEzDC,EAFyD,OAG9BF,mBAASlC,GAHqB,mBAG/DiF,EAH+D,KAGjDC,EAHiD,KAIhEC,EAAkBC,mBA2DxB,OACE,kBAACC,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,CACEC,SAAUL,EACVM,KAAMR,EACNS,UAAU,EACVjC,SAlCW,SAAAC,GACjBwB,EAAgBxB,EAAEC,OAAOH,QAkCnBmC,OAhCa,WACnB,IAAMV,EAAeE,EAAgBS,QAAQC,UACxCZ,EAIAnD,EAAS,CACZhD,KAAM,YACNE,QAAS,CACPU,YAAauF,EACb9F,SAAUA,EACVW,QAASA,KARXoF,EAAgBlF,IA8BZ8F,WAAW,QACXC,WAnBgB,SAAArC,GAEN,MADAA,EAAEsC,SAAWtC,EAAEuC,SAE7BvC,EAAEwC,aAAc,EACZxC,EAAEG,gBACJH,EAAEG,sBAiBJ,kBAAC,KAAD,CAAWsC,YAAarG,EAAShB,KAAK,SACnC,SAACsH,GAAD,OACC,kBAACC,GAAD,eACEC,IAAKF,EAASZ,UACVY,EAASG,gBAEZtG,EAAS6C,KAAI,SAACpC,EAAM8F,GAAP,OACZ,kBAAC,KAAD,CAAWjE,IAAK7B,EAAKJ,QAASmG,YAAa/F,EAAKJ,QAASkG,MAAOA,IAC7D,SAACJ,EAAUM,GAAX,OACC,kBAACC,GAAD,eACEpE,IAAK7B,EAAKJ,SACN8F,EAASQ,eACTR,EAASS,gBAHf,CAIEP,IAAKF,EAASZ,SACdsB,WAAYJ,EAASI,aAErB,kBAACtC,EAAD,eACErF,SAAUA,EACVW,QAASA,GACLY,IAEN,kBAAC,GAAD,CAAY0C,QAAS,kBA1EnBb,EA0EoC7B,EAAKJ,aAzEzCkC,OAAOC,QAAQ,2CAE/BX,EAAS,CACPhD,KAAM,cACNE,QAAS,CACPG,SAAUA,EACVW,QAASA,EACTQ,QAASiC,MARE,IAACA,IA2EA,uBAAGc,UAAW3B,YAOvB0E,EAASxC,gBAIhB,kBAACmD,GAAD,KACE,kBAACC,GAAD,CAAWlI,KAAK,OAAO0E,MAAOrB,EAAMsB,SA/FzB,SAAAC,GACftB,EAAQsB,EAAEC,OAAOH,QA8F2CI,YAAY,iBACpE,kBAACT,EAAD,CAAQC,QA7FG,SAAAM,GACfA,EAAEG,iBAdkB,SAAA1B,GACpBL,EAAS,CACPhD,KAAM,WACNE,QAAS,CACPmB,YAAagC,EACbhD,SAAUA,EACVW,QAASA,KASbmH,CAAc9E,GACdC,EAAQ,MA0FuB,uBAAGiB,UAAW5B,OAOjD,IAAM4D,GAAgB9D,IAAOC,IAAV,MAWbmF,GAAcpF,IAAOC,IAAV,KAQKI,EAAQ,GAEnBA,EAAQ,IAIbyE,GAAa9E,IAAOC,IAAV,MAUVuF,GAAYxF,IAAOC,IAAV,KAQOI,EAAQ,IAKxBoF,GAAYzF,YAAO0C,EAAP1C,CAAH,MAITuD,GAAavD,YAAO4B,EAAP5B,CAAH,KAEDK,EAAQ,IAIjB2D,GAAiBhE,YAAO2F,KAAP3F,CAAH,KAEDK,EAAQ,IAGrB0D,GAAY/D,IAAO4F,GAAV,M,+rCCtLA,SAASC,GAAT,GAAwC,IAAvBjI,EAAsB,EAAtBA,SAAUI,EAAY,EAAZA,SAChCuC,EAAaC,IAAMC,WAAWC,IAA9BH,SAD4C,EAE5BI,mBAAS,IAFmB,mBAE7CC,EAF6C,KAEvCC,EAFuC,KAmEpD,OACE,kBAACiF,GAAD,KACE,kBAAC,KAAD,CAAiBC,UApCH,SAAAC,GAAW,IACnBC,EAA8BD,EAA9BC,YAAaC,EAAiBF,EAAjBE,OAAQ3I,EAASyI,EAATzI,KACxB0I,IAGDA,EAAYrB,cAAgBsB,EAAOtB,aAAeqB,EAAYhB,QAAUiB,EAAOjB,QAGtE,SAAT1H,EAac,SAATA,GACPgD,EAAS,CACPhD,KAAM,cACNE,QAAS,CACPG,SAAUA,EACV0B,WAAY4G,EAAOjB,MACnB1F,SAAU0G,EAAYhB,SAlB1B1E,EAAS,CACPhD,KAAM,cACNE,QAAS,CACPG,SAAUA,EACVwB,aAAc8G,EAAOtB,YACrBvF,WAAY4G,EAAYrB,YACxBtF,WAAY4G,EAAOjB,MACnB1F,SAAU0G,EAAYhB,aAqBxB,kBAAC,KAAD,CAAWL,YAAY,QAAQuB,UAAU,aAAa5I,KAAK,SACxD,SAACsH,GAAD,OACC,kBAACuB,GAAD,iBACMvB,EAASG,eADf,CAEED,IAAKF,EAASZ,WAEbjG,EAASuD,KAAI,SAAC1C,EAAMoG,GAAP,OACZ,kBAAC,KAAD,CAAWjE,IAAKnC,EAAKN,QAAS2G,YAAarG,EAAKN,QAAS0G,MAAOA,IAC7D,SAACJ,GAAD,OACC,kBAACwB,GAAD,KACE,kBAACC,GAAD,iBACMzB,EAASQ,eADf,CAEEN,IAAKF,EAASZ,UACVY,EAASS,iBAEb,kBAAC7B,GAAD,eACE7F,SAAUA,GACNiB,IAEN,kBAAC+C,EAAD,CAAQC,QAAS,kBA5EnBb,EA4EoCnC,EAAKN,aA3EzC0C,OAAOC,QAAQ,2CAE/BX,EAAS,CACPhD,KAAM,cACNE,QAAS,CACPG,SAAUA,EACVW,QAASyC,MAPE,IAACA,IA6EI,uBAAGc,UAAW3B,aAOzB0E,EAASxC,iBAKlB,6BACE,kBAACkE,GAAD,KACE,kBAACC,GAAD,CAAWjJ,KAAK,OAAO0E,MAAOrB,EAAMsB,SA/E3B,SAAAC,GACftB,EAAQsB,EAAEC,OAAOH,QA8E6CI,YAAY,iBACpE,kBAACT,EAAD,CAAQC,QA7EC,SAAAM,GACfA,EAAEG,iBA1BkB,SAAA1B,GACpBL,EAAS,CACPhD,KAAM,WACNE,QAAS,CACPU,YAAayC,EACbhD,SAAUA,KAGd6I,QAAQC,IAAI1I,GAmBZ2I,CAAc/F,GACdC,EAAQ,MA0EyB,uBAAGiB,UAAW5B,QAQnD,IAAMmG,GAAUrG,IAAOC,IAAV,MAKP6F,GAAiB9F,IAAOC,IAAV,MAWdsG,GAAYvG,IAAOC,IAAV,MAYTqG,GAActG,IAAOC,IAAV,MAYXuG,GAAYxG,YAAO0C,EAAP1C,CAAH,MAMToG,GAAYpG,IAAOC,IAAV,M,wxBC9JA,SAAS2G,GAAT,GAAmC,IAAd1I,EAAa,EAAbA,UAC1BqC,EAAaC,IAAMC,WAAWC,IAA9BH,SACA3C,EAAaiJ,cAAbjJ,SACFkJ,EAAUC,cACV1I,EAAQH,EAAU8I,MAAK,SAAA3I,GAAK,OAAIA,EAAMT,WAAaqJ,OAAOrJ,MAJjB,EAKL+C,mBAAStC,EAAQA,EAAMN,UAAY,MAL9B,mBAKxCmJ,EALwC,KAKzBC,EALyB,KAMzCC,EAAmBvD,mBACzB,IAAKxF,EAEH,OADAyI,EAAQnI,KAAK,KACN,KA4BT,OACE,kBAAC0I,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,CACEtD,SAAUmD,EACVlD,KAAMgD,EACN/C,UAAU,EACVjC,SApBS,SAAAC,GACjBgF,EAAiBhF,EAAEC,OAAOH,QAoBlBmC,OAnCY,WACpB,IAAM8C,EAAgBE,EAAiB/C,QAAQC,UAC1C4C,EAIA3G,EAAS,CACZhD,KAAM,aACNE,QAAS,CACPG,SAAUS,EAAMT,SAChBJ,aAAc0J,KAPhBC,EAAiB9I,EAAMN,YAiCjByG,WAnBc,SAAArC,GAEN,MADAA,EAAEsC,SAAWtC,EAAEuC,SAE7BvC,EAAEwC,aAAc,EACZxC,EAAEG,gBACJH,EAAEG,mBAeEiC,WAAW,WAGf,kBAACiD,GAAD,CAAQ9F,GAAI,CAAEC,SAAU,MAAO,uBAAGG,UAAU,kBAE9C,kBAAC+D,GAAD,CACEjI,SAAUS,EAAMT,SAChBI,SAAUK,EAAML,YAMxB,IAAMqJ,GAAmBrH,IAAOC,IAAV,MAOhBsH,GAAavH,IAAOyH,GAAV,KAILpH,EAAQ,IAIb2D,GAAiBhE,YAAO2F,KAAP3F,CAAH,KAEDK,EAAQ,IAGrBmH,GAASxH,YAAO6C,IAAP7C,CAAH,KAEDK,EAAQ,GAENA,EAAQ,IAIfiH,GAAStH,IAAO0H,OAAV,KAMUrH,EAAQ,I,oYCnGf,SAASsH,GAAT,GAAgC,EAAZzJ,UAAa,IACxC4I,EAAUC,cAER/H,EADSmE,cACa9F,MAAtB2B,SACF4I,EAAO,SAAAC,GACXA,EAAMC,kBACNhB,EAAQiB,UAEV,OACE,kBAACC,GAAD,CAAMnG,QAAS+F,GACb,kBAACK,GAAD,KACGjJ,EACD,4BAAQ6C,QAAS+F,GAAjB,UAMR,IAAMI,GAAOhI,IAAOC,IAAV,MASJgI,GAAQjI,IAAOC,IAAV,MCzBI,SAASiI,GAAT,GAA6B,IAAZhK,EAAW,EAAXA,UACxBgF,EAAWC,cACXG,EAAaJ,EAAS7F,OAAS6F,EAAS7F,MAAMiG,WACpD,OACE,oCACE,kBAAC,IAAD,CAAQJ,SAAUI,GAAYJ,GAC5B,kBAAC,IAAD,CAAOiF,KAAK,IAAIC,OAAO,EAAMC,OAAQ,SAAA7E,GAAK,OAAI,kBAAClD,EAAD,iBAAUkD,EAAV,CAAiBtF,UAAWA,QAC1E,kBAAC,IAAD,CACEiK,KAAK,wBACLE,OAAQ,SAAA7E,GAAK,OAAI,kBAACoD,GAAD,iBAAepD,EAAf,CAAsBtF,UAAWA,SAGrDoF,GACD,kBAAC,IAAD,CACE6E,KAAK,sBACLE,OAAQ,SAAA7E,GAAK,OAAI,kBAACmE,GAAD,iBAAcnE,EAAd,CAAqBtF,UAAWA,SCflD,IAAMwC,GAAmBF,IAAM8H,cACpC,CACEpK,UAAWqK,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,KAwBtDC,OApBf,WACE,IAAMC,EAAepI,IAAMC,WAAWC,IADzB,EAEaF,IAAMqI,WAAWzL,EAASwL,GAFvC,mBAENvL,EAFM,KAECkD,EAFD,KAGPuI,EAAetI,IAAMuI,SAAQ,WACjC,MAAO,CAAE1L,QAAOkD,cACf,CAAClD,EAAOkD,IAKX,OAJAC,IAAMwI,WAAU,WACdP,aAAaQ,QAAQ,iBAAkBV,KAAKW,UAAU7L,EAAMa,cAC3D,CAACb,IAGF,kBAACqD,GAAiByI,SAAlB,CAA2BlH,MAAO6G,GAChC,kBAAC/F,EAAD,MACA,kBAAC,IAAD,KACE,kBAACmF,GAAD,CAAQhK,UAAWb,EAAMa,eCtBjCkL,IAASf,OAAO,kBAAC,GAAD,MAASgB,SAASC,eAAe,W","file":"static/js/main.3da05ae1.chunk.js","sourcesContent":["function reducer(state, action){\r\n  switch(action.type){\r\n    case \"ADD_BOARD\": {\r\n      const { newBoardName } = action.payload;\r\n      if(newBoardName.length){\r\n        const newBoard = {\r\n          boardKey: Date.now(),\r\n          boardName: newBoardName,\r\n          listList: [],\r\n          pin: false,\r\n        }\r\n        return { boardList: [...state.boardList, newBoard] };\r\n      }\r\n      break;\r\n    }\r\n    case \"ADD_LIST\": {\r\n      const { newListName, boardKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          if(newListName.length){\r\n            const newList = {\r\n              listKey: String(Date.now()),\r\n              listName: newListName,\r\n              cardList: []\r\n            }\r\n            board.listList.push(newList);\r\n          }\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"ADD_CARD\": {\r\n      const { newCardName, boardKey, listKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              if(newCardName.length){\r\n                const newCard = {\r\n                  cardKey: String(Date.now()),\r\n                  cardName: newCardName,\r\n                  done: false\r\n                }\r\n                list.cardList.push(newCard);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};  \r\n    }\r\n    case \"DELETE_BOARD\": {\r\n      const { boardKey } = action.payload;\r\n      const newBoardList = state.boardList.filter(board => board.boardKey!==boardKey);\r\n      return { boardList: newBoardList };\r\n    }\r\n    case \"DELETE_LIST\": {\r\n      const { boardKey, listKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList = board.listList.filter(list => list.listKey !== listKey);\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"DELETE_CARD\": {\r\n      const { boardKey, listKey, cardKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              list.cardList = list.cardList.filter(card => card.cardKey !== cardKey);\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"EDIT_BOARD\": {\r\n      const { boardKey, newBoardName } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.boardName = newBoardName;\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"EDIT_LIST\": {\r\n      const { boardKey, listKey, newListName } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              list.listName = newListName;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"EDIT_CARD\": {\r\n      const { boardKey, listKey, cardKey, newCardName } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              list.cardList.forEach(card => {\r\n                if(card.cardKey===cardKey){\r\n                  card.cardName = newCardName;\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"TOGGLE_PIN\": {\r\n      const { boardKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.pin = !board.pin;\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"TOGGLE_DONE\": {\r\n      const { boardKey, listKey, cardKey } = action.payload;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===listKey){\r\n              list.cardList.forEach(card => {\r\n                if(card.cardKey===cardKey){\r\n                  card.done = !card.done;\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"SWITCH_CARD\": {\r\n      const { boardKey, startListKey, endListKey, startIndex, endIndex } = action.payload;\r\n      let dragCard = null;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          board.listList.forEach(list => {\r\n            if(list.listKey===startListKey){\r\n              dragCard = list.cardList[startIndex];\r\n              list.cardList.splice(startIndex, 1);\r\n              if(startListKey===endListKey){\r\n                list.cardList.splice(endIndex, 0, dragCard);\r\n              }\r\n              else{\r\n                board.listList.forEach(list => {\r\n                  if(list.listKey===endListKey){\r\n                    list.cardList.splice(endIndex, 0, dragCard);\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    case \"SWITCH_LIST\": {\r\n      const { boardKey, startIndex, endIndex } = action.payload;\r\n      let dragList = null;\r\n      state.boardList.forEach(board => {\r\n        if(board.boardKey===boardKey){\r\n          dragList = board.listList[startIndex];\r\n          board.listList.splice(startIndex, 1);\r\n          board.listList.splice(endIndex, 0, dragList);\r\n        }\r\n      });\r\n      return {...state};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PALETTE = ['#E9ECE5', '#C0DFD9', '#B3C2BF', '#3B3A36'];\r\n\r\nexport default function Help({ show }) {\r\n  return (\r\n    show ? (\r\n      <HelpContainer showHelp>\r\n        <Bold>Home Page</Bold>\r\n          Click on a board name to enter the board page<br />\r\n          Pin important boards for quick access<br /><br />\r\n        <Bold>Board Page</Bold>\r\n          Click on the board or list name to modify it<br />\r\n          Drag and drop lists and cards to change their positions<br /><br />\r\n        <Bold>Card Page</Bold>\r\n          Coming soon<br />\r\n      </HelpContainer>\r\n    ) : null\r\n  );\r\n}\r\n\r\nconst HelpContainer = styled.div`\r\n  position: fixed;\r\n  padding: 30px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -90%);\r\n  background: ${PALETTE[2]};\r\n  display: block;\r\n  border-radius: 10px;\r\n  font-size: 16px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst Bold = styled.div`\r\n  font-weight: bold;\r\n  text-decoration: underline;\r\n`;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Help from '../components/Help';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport const ADD = 'fas fa-plus';\r\nexport const DELETE = \"fas fa-trash\";\r\nconst PIN = \"far fa-star\";\r\nconst PINNED = \"fas fa-star\";\r\nexport const PALETTE = ['#E9ECE5', '#C0DFD9', '#B3C2BF', '#3B3A36'];\r\n\r\nexport default function Home({ boardList }) {\r\n  const { dispatch } = React.useContext(BoardListContext);\r\n  const [text, setText] = useState(\"\");\r\n  const [showHelp, setShowHelp] = useState(false);\r\n  const createNewBoard = text => {\r\n    dispatch({\r\n      type: \"ADD_BOARD\",\r\n      payload: {\r\n        newBoardName: text\r\n      }\r\n    });\r\n  };\r\n  const deleteBoard = key => {\r\n    const askDelete = window.confirm(\"Do you really want to remove the board?\");\r\n    if (askDelete) {\r\n      dispatch({\r\n        type: \"DELETE_BOARD\",\r\n        payload: {\r\n          boardKey: key\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const onChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    createNewBoard(text);\r\n    setText(\"\");\r\n  };\r\n  return (\r\n    <Container>\r\n      <BoardsWrapper>\r\n        <Title>Pinned Boards</Title>\r\n        <Boards>\r\n          {boardList.map(board => (\r\n            board.pin ? (\r\n              <BoardLink key={board.boardKey}>\r\n                <ToBoard to={{\r\n                  pathname: `/${board.boardKey}/${board.boardName}`,\r\n                }}>\r\n                  {board.boardName}\r\n                </ToBoard>\r\n                <Button\r\n                  onClick={() => dispatch({\r\n                    type: \"TOGGLE_PIN\",\r\n                    payload: { boardKey: board.boardKey }\r\n                  })}\r\n                >\r\n                  <i className={board.pin ? PINNED : PIN}></i>\r\n                </Button>\r\n                <Button onClick={() => deleteBoard(board.boardKey)}>\r\n                  <i className={DELETE}></i>\r\n                </Button>\r\n              </BoardLink>\r\n            ) : null\r\n          ))}\r\n        </Boards>\r\n      </BoardsWrapper>\r\n      <BoardsWrapper>\r\n        <Title>Boards</Title>\r\n        <Boards>\r\n          {boardList.map(board => (\r\n            <BoardLink key={board.boardKey}>\r\n              <ToBoard to={{\r\n                pathname: `/${board.boardKey}/${board.boardName}`,\r\n              }}>\r\n                {board.boardName}\r\n              </ToBoard>\r\n              <Button onClick={() => dispatch({\r\n                type: \"TOGGLE_PIN\",\r\n                payload: { boardKey: board.boardKey }\r\n              })}\r\n              >\r\n                <i className={board.pin ? PINNED : PIN}></i>\r\n              </Button>\r\n              <Button onClick={() => deleteBoard(board.boardKey)}>\r\n                <i className={DELETE}></i>\r\n              </Button>\r\n            </BoardLink>\r\n          ))}\r\n          <BoardAdder>\r\n            <BoardInput type=\"text\" value={text} onChange={onChange} placeholder='Add a board..' />\r\n            <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n          </BoardAdder>\r\n        </Boards>\r\n      </BoardsWrapper>\r\n      <HelpLink\r\n        onClick={() => setShowHelp(!showHelp)}\r\n      >\r\n        {showHelp ? 'Hide' : 'Tips'}\r\n      </HelpLink>\r\n      <Help show={showHelp} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport const Button = styled.button`\r\n  border: none;\r\n  background: none;\r\n  &:hover{\r\n      color: ${PALETTE[2]};\r\n  }\r\n  cursor: pointer;\r\n  color: ${PALETTE[3]};  \r\n  outline: none;  \r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border: none;\r\n  padding: 5px;\r\n  background: none;\r\n  font-family: 'Open Sans', 'Noto Sans KR';\r\n  &::placeholder{\r\n      color: ${PALETTE[2]};\r\n  }\r\n  outline-color: ${PALETTE[3]};\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  color: ${PALETTE[3]};\r\n`;\r\n\r\nconst BoardInput = styled(Input)`\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  margin: auto 0;\r\n`;\r\n\r\nconst ToBoard = styled(Link)`\r\n  color: ${PALETTE[3]};\r\n  text-decoration: none;\r\n  &:hover{\r\n      color: ${PALETTE[2]};\r\n  }\r\n  margin: auto;\r\n  font-weight: bold;\r\n  word-wrap: break-word;\r\n  word-break: break-word;\r\n  text-align: center;\r\n`;\r\n\r\nconst BoardAdder = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 10px;\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n  width: 200px;\r\n  height: 80px;\r\n  background-color: white;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 40px;\r\n`;\r\n\r\nconst BoardLink = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n  width: 200px;\r\n  height: 80px;\r\n  background-color: white;\r\n`;\r\n\r\nconst Boards = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n`;\r\n\r\nconst BoardsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  align-items: center;\r\n  border-radius: 20px;\r\n  background-color: ${PALETTE[1]};\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst HelpLink = styled.a`\r\n  padding-top: 20px;\r\n  font-size: 14px;\r\n  color: ${PALETTE[3]};\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  text-decoration: underline;\r\n`;\r\n\r\n\r\n\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { PALETTE } from '../routes/Home';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  *{\r\n    box-sizing: border-box;\r\n  }\r\n  html{\r\n    height: 100%;\r\n  }\r\n  body{\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family: 'Open Sans', 'Noto Sans KR';\r\n    background-color: ${PALETTE[0]};\r\n    height: 100%;\r\n  }\r\n  #root{\r\n    height: 100%;\r\n  }\r\n  ::-webkit-scrollbar{\r\n    background: none;\r\n    height: 14px;\r\n  }\r\n  ::-webkit-scrollbar-track{\r\n    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.2);\r\n    border-radius: 10px;\r\n  }\r\n  ::-webkit-scrollbar-thumb{\r\n    background: rgba(0, 0, 0, 0.15);\r\n    border-radius: 10px;\r\n  }\r\n`;","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Button, PALETTE } from '../routes/Home';\r\nimport { BoardListContext } from '../App';\r\n\r\nconst CHECK = \"fas fa-check\";\r\nconst DONE = \"fas fa-times\";\r\n\r\nexport default function Card({ boardKey, listKey, cardKey, cardName, done }) {\r\n  const location = useLocation();\r\n  const { dispatch } = React.useContext(BoardListContext);\r\n  const ICON = done ? DONE : CHECK;\r\n  return (\r\n    <>\r\n      <Cardtext\r\n        done={done}\r\n        to={{\r\n          pathname: `/${cardKey}/${cardName}`,\r\n          state: {\r\n            background: location,\r\n            cardName: cardName\r\n          }\r\n        }}\r\n      >\r\n        {cardName}\r\n      </Cardtext>\r\n      <CardButton\r\n        done={done}\r\n        onClick={() => dispatch({\r\n          type: \"TOGGLE_DONE\",\r\n          payload: {\r\n            boardKey: boardKey,\r\n            listKey: listKey,\r\n            cardKey: cardKey\r\n          }\r\n        })}\r\n      >\r\n        <i className={ICON}></i>\r\n      </CardButton>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Cardtext = styled(Link)`\r\n  width: 100%;\r\n  padding: 5px;\r\n  text-align: left;\r\n  font-size: 14px;\r\n  text-decoration: ${props => (props.done ? 'line-through' : 'none')};\r\n  color: ${PALETTE[3]};\r\n`;\r\n\r\nconst CardButton = styled(Button)`\r\n  &:hover{\r\n    color: ${PALETTE[0]};\r\n  }\r\n`;","import React, { useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from './Card';\r\nimport { Button, Input, ADD, DELETE, PALETTE } from '../routes/Home';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport default function List({ boardKey, listKey, listName, cardList }) {\r\n  const { dispatch } = React.useContext(BoardListContext);\r\n  const [text, setText] = useState(\"\");\r\n  const [nextListName, setNextListName] = useState(listName);\r\n  const nextListNameRef = useRef();\r\n  const createNewCard = text => {\r\n    dispatch({\r\n      type: \"ADD_CARD\",\r\n      payload: {\r\n        newCardName: text,\r\n        boardKey: boardKey,\r\n        listKey: listKey,\r\n      }\r\n    });\r\n  };\r\n  const onChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    createNewCard(text);\r\n    setText(\"\");\r\n  };\r\n  const deleteCard = (key) => {\r\n    const askDelete = window.confirm(\"Do you really want to remove the card?\");\r\n    if (askDelete) {\r\n      dispatch({\r\n        type: \"DELETE_CARD\",\r\n        payload: {\r\n          boardKey: boardKey,\r\n          listKey: listKey,\r\n          cardKey: key\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const changeText = e => {\r\n    setNextListName(e.target.value);\r\n  };\r\n  const editListName = () => {\r\n    const nextListName = nextListNameRef.current.innerHTML;\r\n    if (!nextListName) {\r\n      setNextListName(listName);\r\n      return;\r\n    }\r\n    else dispatch({\r\n      type: \"EDIT_LIST\",\r\n      payload: {\r\n        newListName: nextListName,\r\n        boardKey: boardKey,\r\n        listKey: listKey,\r\n      }\r\n    });\r\n  }\r\n  const disableNewLines = e => {\r\n    const keyCode = e.keyCode || e.which;\r\n    if (keyCode === 13) {\r\n      e.returnValue = false;\r\n      if (e.preventDefault) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <ListContainer>\r\n      <ListTitle>\r\n        <StyledEditable\r\n          innerRef={nextListNameRef}\r\n          html={nextListName}\r\n          disabled={false}\r\n          onChange={changeText}\r\n          onBlur={editListName}\r\n          spellCheck='false'\r\n          onKeyPress={disableNewLines}\r\n        />\r\n      </ListTitle>\r\n      <Droppable droppableId={listKey} type=\"card\">\r\n        {(provided) => (\r\n          <ScrollView\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n          >\r\n            {cardList.map((card, index) => (\r\n              <Draggable key={card.cardKey} draggableId={card.cardKey} index={index}>\r\n                {(provided, snapshot) => (\r\n                  <CardWrapper\r\n                    key={card.cardKey}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                    isDragging={snapshot.isDragging}\r\n                  >\r\n                    <Card\r\n                      boardKey={boardKey}\r\n                      listKey={listKey}\r\n                      {...card}\r\n                    />\r\n                    <CardButton onClick={() => deleteCard(card.cardKey)}>\r\n                      <i className={DELETE}></i>\r\n                    </CardButton>\r\n                  </CardWrapper>\r\n                )}\r\n\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </ScrollView>\r\n        )}\r\n      </Droppable>\r\n      <CardAdder>\r\n        <CardInput type=\"text\" value={text} onChange={onChange} placeholder='Add a card..' />\r\n        <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n      </CardAdder>\r\n    </ListContainer>\r\n  );\r\n\r\n}\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  word-wrap: break-word;\r\n  word-break: break-word;\r\n  max-height: 100%;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin: 5px 0;\r\n  border-radius: 5px;\r\n  background-color: ${PALETTE[2]};\r\n  padding: 10px;\r\n  color: ${PALETTE[3]};\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst ScrollView = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  overflow-y: auto;\r\n  min-height: 1px;\r\n`;\r\n\r\nconst CardAdder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  margin: 5px 0 10px 0;\r\n  background-color: ${PALETTE[0]};\r\n  padding: 10px;\r\n  color: white;\r\n`;\r\n\r\nconst CardInput = styled(Input)`\r\n    width: 100%;\r\n`;\r\n\r\nconst CardButton = styled(Button)`\r\n  &:hover{\r\n      color: ${PALETTE[0]};\r\n  }\r\n`;\r\n\r\nconst StyledEditable = styled(ContentEditable)`\r\n  padding: 5px;  \r\n  outline-color: ${PALETTE[3]};  \r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  text-align: left;\r\n  margin: 5px 0;\r\n`;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport List from './List';\r\nimport { Button, Input, ADD, DELETE } from '../routes/Home';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport default function Board({ boardKey, listList }) {\r\n  const { dispatch } = React.useContext(BoardListContext);\r\n  const [text, setText] = useState(\"\");\r\n  const createNewList = text => {\r\n    dispatch({\r\n      type: \"ADD_LIST\",\r\n      payload: {\r\n        newListName: text,\r\n        boardKey: boardKey\r\n      }\r\n    });\r\n    console.log(listList);\r\n  };\r\n  const deleteList = (key) => {\r\n    const askDelete = window.confirm(\"Do you really want to remove the list?\");\r\n    if (askDelete) {\r\n      dispatch({\r\n        type: \"DELETE_LIST\",\r\n        payload: {\r\n          boardKey: boardKey,\r\n          listKey: key\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const onChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    createNewList(text);\r\n    setText(\"\");\r\n  };\r\n  const onDragEnd = result => {\r\n    const { destination, source, type } = result;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n    if (type === 'card') {\r\n      dispatch({\r\n        type: \"SWITCH_CARD\",\r\n        payload: {\r\n          boardKey: boardKey,\r\n          startListKey: source.droppableId,\r\n          endListKey: destination.droppableId,\r\n          startIndex: source.index,\r\n          endIndex: destination.index\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    else if (type === 'list') {\r\n      dispatch({\r\n        type: \"SWITCH_LIST\",\r\n        payload: {\r\n          boardKey: boardKey,\r\n          startIndex: source.index,\r\n          endIndex: destination.index\r\n        }\r\n      });\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BoardContainer>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"lists\" direction=\"horizontal\" type=\"list\">\r\n          {(provided) => (\r\n            <ListField\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {listList.map((list, index) => (\r\n                <Draggable key={list.listKey} draggableId={list.listKey} index={index}>\r\n                  {(provided) => (\r\n                    <Wrapper>\r\n                      <ListWrapper\r\n                        {...provided.draggableProps}\r\n                        ref={provided.innerRef}\r\n                        {...provided.dragHandleProps}\r\n                      >\r\n                        <List\r\n                          boardKey={boardKey}\r\n                          {...list}\r\n                        />\r\n                        <Button onClick={() => deleteList(list.listKey)}>\r\n                          <i className={DELETE}></i>\r\n                        </Button>\r\n                      </ListWrapper>\r\n                    </Wrapper>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </ListField>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n      <div>\r\n        <ListAdder>\r\n          <ListInput type=\"text\" value={text} onChange={onChange} placeholder='Add a list..' />\r\n          <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n        </ListAdder>\r\n      </div>\r\n    </BoardContainer>\r\n  );\r\n\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst BoardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  padding: 0 10px;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  height: 100%;\r\n`;\r\n\r\nconst ListAdder = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 20px 0 10px;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  padding: 10px 10px 5px 10px;\r\n  width: 230px;\r\n`;\r\n\r\nconst ListWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 10px;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  background-color: white;\r\n  min-width: 230px;\r\n  max-width: 230px;\r\n  max-height: 100%;\r\n`;\r\n\r\nconst ListInput = styled(Input)`\r\n  margin-bottom: 5px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ListField = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  height: 100%;\r\n`;","import React, { useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport Board from '../components/Board';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { PALETTE } from './Home';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { BoardListContext } from '../App';\r\n\r\nexport default function BoardPage({ boardList }) {\r\n  const { dispatch } = React.useContext(BoardListContext);\r\n  const { boardKey } = useParams();\r\n  const history = useHistory();\r\n  const board = boardList.find(board => board.boardKey === Number(boardKey));\r\n  const [nextBoardName, setNextBoardName] = useState(board ? board.boardName : null);\r\n  const nextBoardNameRef = useRef();\r\n  if (!board) {\r\n    history.push(\"/\");\r\n    return null;\r\n  }\r\n  const editBoardName = () => {\r\n    const nextBoardName = nextBoardNameRef.current.innerHTML;\r\n    if (!nextBoardName) {\r\n      setNextBoardName(board.boardName);\r\n      return;\r\n    }\r\n    else dispatch({\r\n      type: \"EDIT_BOARD\",\r\n      payload: {\r\n        boardKey: board.boardKey,\r\n        newBoardName: nextBoardName\r\n      }\r\n    });\r\n  };\r\n  const changeText = e => {\r\n    setNextBoardName(e.target.value);\r\n  }\r\n  const disableNewLines = e => {\r\n    const keyCode = e.keyCode || e.which;\r\n    if (keyCode === 13) {\r\n      e.returnValue = false;\r\n      if (e.preventDefault) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <BoardPageWrapper>\r\n      <Header>\r\n        <BoardTitle>\r\n          <StyledEditable\r\n            innerRef={nextBoardNameRef}\r\n            html={nextBoardName}\r\n            disabled={false}\r\n            onChange={changeText}\r\n            onBlur={editBoardName}\r\n            onKeyPress={disableNewLines}\r\n            spellCheck='false'\r\n          />\r\n        </BoardTitle>\r\n        <ToHome to={{ pathname: '/' }}><i className=\"fas fa-home\"></i></ToHome>\r\n      </Header>\r\n      <Board\r\n        boardKey={board.boardKey}\r\n        listList={board.listList}\r\n      />\r\n    </BoardPageWrapper>\r\n  );\r\n}\r\n\r\nconst BoardPageWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  text-align: center;\r\n  height: 100%;\r\n`;\r\n\r\nconst BoardTitle = styled.h1`\r\n  font-size: 24px;\r\n  margin: auto;\r\n  padding: 10px 20px;\r\n  color: ${PALETTE[3]};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledEditable = styled(ContentEditable)`\r\n  padding: 10px;\r\n  outline-color: ${PALETTE[3]};  \r\n`;\r\n\r\nconst ToHome = styled(Link)`\r\n  font-size: 24px;\r\n  color: ${PALETTE[3]};\r\n  &:hover{\r\n    color: ${PALETTE[2]};\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  background-color: ${PALETTE[1]};\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nexport default function CardPage({ boardList }){\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { cardName } = location.state;\r\n  const back = event => {\r\n    event.stopPropagation();\r\n    history.goBack();\r\n  }\r\n  return (\r\n    <Full onClick={back}>\r\n      <Modal>\r\n        {cardName}\r\n        <button onClick={back}>Back</button>\r\n      </Modal>\r\n    </Full>\r\n  );\r\n}\r\n\r\nconst Full = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  position: absolute;\r\n  background: white;\r\n  top: 25px;\r\n  left: 10%;\r\n  right: 10%;\r\n  padding: 15px;\r\n  border: 1px solid black;\r\n`;","import React from 'react';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport Home from './routes/Home';\r\nimport BoardPage from './routes/BoardPage';\r\nimport CardPage from './routes/CardPage';\r\n\r\nexport default function Router({boardList}){\r\n  const location = useLocation();\r\n  const background = location.state && location.state.background;\r\n  return (\r\n    <>\r\n      <Switch location={background||location}>\r\n        <Route path=\"/\" exact={true} render={props => <Home {...props} boardList={boardList} />} />\r\n        <Route\r\n          path=\"/:boardKey/:boardName\" \r\n          render={props => <BoardPage {...props} boardList={boardList} />} \r\n        />\r\n      </Switch>\r\n      {background && \r\n      <Route \r\n        path=\"/:cardKey/:cardName\" \r\n        render={props => <CardPage {...props} boardList={boardList}/>} \r\n      />}\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport reducer from './reducer';\r\nimport { GlobalStyle } from './styles/GlobalStyle';\r\nimport Router from './Router';\r\n\r\nexport const BoardListContext = React.createContext(\r\n  {\r\n    boardList: JSON.parse(localStorage.getItem('localBoardList')) || []\r\n  }\r\n);\r\n\r\nfunction App() {\r\n  const initialState = React.useContext(BoardListContext);\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n  const contextValue = React.useMemo(() => {\r\n    return { state, dispatch };\r\n  }, [state, dispatch]);\r\n  React.useEffect(() => {\r\n    localStorage.setItem('localBoardList', JSON.stringify(state.boardList));\r\n  }, [state]);\r\n\r\n  return (\r\n    <BoardListContext.Provider value={contextValue}>\r\n      <GlobalStyle />\r\n      <HashRouter>\r\n        <Router boardList={state.boardList} />\r\n      </HashRouter>\r\n    </BoardListContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}