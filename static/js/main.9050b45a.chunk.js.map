{"version":3,"sources":["routes/Home.js","components/Card.js","components/List.js","components/Board.js","routes/BoardPage.js","App.js","index.js"],"names":["Home","boardList","create","remove","useState","text","setText","Container","BoardsWrapper","Title","Boards","map","board","BoardLink","key","boardKey","ToBoard","to","pathname","boardName","state","name","Button","onClick","EMPTY","className","BoardAdder","BoardInput","type","value","onChange","e","target","placeholder","preventDefault","createNewBoard","Shadow","css","styled","button","Input","input","h2","Link","div","Card","listKey","cardKey","content","done","toggleDone","ICON","Cardtext","WhiteButton","props","List","listName","cardList","ListContainer","ListTitle","card","CardWrapper","CardAdder","CardInput","createNewCard","h4","Board","listList","BoardContainer","list","ListWrapper","ListAdder","ListInput","createNewList","BoardPage","location","history","undefined","push","find","BoardPageWrapper","Header","BoardTitle","ToHome","h1","header","GlobalStyle","createGlobalStyle","App","React","JSON","parse","localStorage","getItem","setBoardList","useEffect","setItem","stringify","filter","length","newBoardList","concat","Date","now","forEach","path","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9050b45a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport {EMPTY} from '../App';\r\n\r\nconst ADD = \"fas fa-plus\";\r\nconst DELETE = \"fas fa-trash\";\r\n\r\nexport default function Home({boardList, create, remove}){\r\n    const [text, setText] = useState(\"\");\r\n    const createNewBoard = text => {\r\n        create(EMPTY, EMPTY, text);\r\n    };\r\n    const deleteBoard = key => {\r\n        remove(key, EMPTY, EMPTY);\r\n    };\r\n    const onChange = e =>{\r\n        setText(e.target.value);\r\n    };\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createNewBoard(text);\r\n        setText(\"\");\r\n    };\r\n    return(\r\n        <Container> \r\n            <BoardsWrapper>\r\n                <Title>Boards</Title> \r\n                <Boards>  \r\n                {boardList.map(board => (\r\n                    <BoardLink key={board.boardKey}>\r\n                        <ToBoard to={{\r\n                            pathname: `/board/${board.boardName}-board`,\r\n                            state:{\r\n                                key: board.boardKey,\r\n                                name: board.boardName\r\n                            }\r\n                        }}>\r\n                            {board.boardName}\r\n                        </ToBoard>\r\n                        <Button onClick={() => deleteBoard(board.boardKey)}><i className={DELETE}></i></Button>\r\n                    </BoardLink>\r\n                ))}\r\n                <BoardAdder>\r\n                    <BoardInput type=\"text\" value={text} onChange={onChange} placeholder='Add a board..'/>\r\n                    <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n                </BoardAdder>\r\n                </Boards>   \r\n            </BoardsWrapper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport const Shadow = css`\r\n    box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    background: none;\r\n    &:hover{\r\n        color: #576574;\r\n    }\r\n    cursor: pointer;    \r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border: none;\r\n    padding: 5px;\r\n    background: none;\r\n    font-family: 'Montserrat', 'Noto Sans KR';\r\n    &::placeholder{\r\n        color: #576574;\r\n    }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n    color: white;\r\n`;\r\n\r\nconst BoardInput = styled(Input)`\r\n    text-align: center;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    margin: auto 0;\r\n`;\r\n\r\nconst ToBoard = styled(Link)`\r\n    color: black;\r\n    text-decoration: none;\r\n    &:hover{\r\n        color: #576574;\r\n    }\r\n    margin: auto;\r\n    font-weight: bold;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst BoardAdder = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin: 10px;\r\n    padding: 20px;\r\n    border-radius: 20px;\r\n    width: 150px;\r\n    height: 150px;\r\n    background-color: #f1f1f1;\r\n    ${Shadow};\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 40px;\r\n`;\r\n\r\nconst BoardLink = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin: 10px;\r\n    padding: 20px;\r\n    border-radius: 20px;\r\n    width: 150px;\r\n    height: 150px;\r\n    background-color: #f1f1f1;\r\n    ${Shadow};\r\n`;\r\n\r\nconst Boards = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n`;\r\n\r\nconst BoardsWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    align-items: center;\r\n    border-radius: 20px;\r\n    background-color: #6a89cc;\r\n    ${Shadow};\r\n`;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {WhiteButton} from './List';\r\n\r\nconst CHECK = \"fas fa-check\";\r\nconst DONE = \"fas fa-times\";\r\n\r\nexport default function Card({ boardKey, listKey, cardKey, content, done, toggleDone }){\r\n    const ICON = done ? DONE : CHECK;\r\n    return (\r\n        <>\r\n            <Cardtext done={done}>{content}</Cardtext>\r\n            <WhiteButton done={done} onClick={()=>toggleDone(boardKey, listKey, cardKey)}><i className={ICON}></i></WhiteButton>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Cardtext = styled.div`\r\n    width: 100%;\r\n    padding: 5px;\r\n    text-align: left;\r\n    font-size: 14px;\r\n    text-decoration: ${props => (props.done ? 'line-through' : 'none')};\r\n`;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from './Card';\r\nimport {Button, Input, Shadow} from '../routes/Home';\r\n\r\nconst ADD = \"fas fa-plus\";\r\nconst DELETE = \"fas fa-trash\";\r\n\r\nexport default function List({boardKey, listKey, listName, cardList, create, remove, toggleDone}){\r\n    const [text, setText] = useState(\"\");\r\n    const createNewCard = text => {\r\n        create(boardKey, listKey, text);\r\n    };\r\n    const onChange = e =>{\r\n        setText(e.target.value);\r\n    };\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createNewCard(text);\r\n        setText(\"\");\r\n    };\r\n    const deleteCard = (key) => {\r\n        remove(boardKey, listKey, key);\r\n    };\r\n    return (\r\n        <ListContainer>\r\n            <ListTitle>{listName}</ListTitle>\r\n            {cardList.map(card => (\r\n                <CardWrapper key={card.cardKey}>\r\n                    <Card \r\n                        boardKey={boardKey}\r\n                        listKey={listKey}\r\n                        cardKey={card.cardKey}\r\n                        content={card.content}\r\n                        done={card.done}\r\n                        toggleDone={toggleDone}\r\n                    />\r\n                    <WhiteButton onClick={()=>deleteCard(card.cardKey)}><i className={DELETE}></i></WhiteButton>\r\n                </CardWrapper>\r\n            ))}\r\n            <CardAdder>\r\n                <CardInput type=\"text\" value={text} onChange={onChange} placeholder='Add a card..' />\r\n                <WhiteButton onClick={onSubmit}><i className={ADD}></i></WhiteButton>\r\n            </CardAdder>\r\n        </ListContainer>\r\n    );\r\n\r\n}\r\n\r\nconst ListContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 10px;\r\n    width: 200px;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin: 5px 0;\r\n    border-radius: 5px;\r\n    ${Shadow};\r\n    background-color: #6a89cc;\r\n    padding: 10px;\r\n    color: white;\r\n`;\r\n\r\nconst CardAdder = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 5px;\r\n    width: 100%;\r\n    margin: 5px 0;\r\n    ${Shadow};\r\n    background-color: #6a89cc;\r\n    padding: 10px;\r\n    color: white;\r\n`;\r\n\r\nconst CardInput = styled(Input)`\r\n    width: 100%;\r\n    color: white;\r\n    &::placeholder{\r\n        color: #dcdde1;\r\n    }\r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const WhiteButton = styled(Button)`\r\n    color: white;\r\n    &:hover{\r\n        color: #dcdde1;\r\n    }\r\n`;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport List from './List';\r\nimport {EMPTY} from '../App';\r\nimport {Button, Input, Shadow} from '../routes/Home';\r\n\r\nconst ADD = \"fas fa-plus\";\r\nconst DELETE = \"fas fa-trash\";\r\n\r\nexport default function Board({boardKey, boardName, listList, create, remove, toggleDone}) {\r\n    const [text, setText] = useState(\"\");\r\n    const createNewList = text => {\r\n        create(boardKey, EMPTY, text);\r\n    };\r\n    const deleteList = (key) => {\r\n        remove(boardKey, key, EMPTY);\r\n    };\r\n    const onChange = e =>{\r\n        setText(e.target.value);\r\n    };\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createNewList(text);\r\n        setText(\"\");\r\n    };\r\n    return(\r\n        <BoardContainer>\r\n            {listList.map(list => (\r\n                <ListWrapper key={list.listKey}>\r\n                    <List\r\n                        boardKey={boardKey} \r\n                        listKey={list.listKey} \r\n                        listName={list.listName} \r\n                        cardList={list.cardList} \r\n                        create={create} \r\n                        remove={remove} \r\n                        toggleDone={toggleDone}\r\n                    />\r\n                    <Button onClick={() => deleteList(list.listKey)}><i className={DELETE}></i></Button>\r\n                </ListWrapper>\r\n            ))}\r\n            <ListAdder>\r\n                <ListInput type=\"text\" value={text} onChange={onChange} placeholder='Add a list..'/>\r\n                <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n            </ListAdder>\r\n        </BoardContainer>\r\n    );\r\n\r\n}\r\n\r\nconst BoardContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    padding: 0 10px;\r\n`;\r\n\r\nconst ListAdder = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 10px;\r\n    border-radius: 5px;\r\n    background-color: #f1f1f1;\r\n    ${Shadow};\r\n    padding: 10px 10px 5px 10px;\r\n`;\r\n\r\nconst ListWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 10px;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    background-color: #f1f1f1;\r\n    ${Shadow};\r\n`;\r\n\r\nconst ListInput = styled(Input)`\r\n    margin-bottom: 5px;\r\n    text-align: center;\r\n    font-weight: bold;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Board from '../components/Board';\r\nimport {Link} from 'react-router-dom';\r\nimport {Shadow} from '../routes/Home';\r\n\r\nexport default function BoardPage({location, history, boardList, create, remove, toggleDone}){\r\n    if(location.state===undefined){\r\n        history.push(\"/\");\r\n        return null;\r\n    }\r\n    const board = boardList.find(board => board.boardKey===location.state.key);\r\n    return (\r\n        <BoardPageWrapper>\r\n            <Header>\r\n                <BoardTitle>{location.state.name}</BoardTitle>\r\n                <ToHome to={{pathname: '/'}}><i className=\"fas fa-home\"></i></ToHome>\r\n            </Header>\r\n            <Board \r\n                boardKey={location.state.key} \r\n                boardName={location.state.name} \r\n                listList={board.listList} \r\n                create={create} \r\n                remove={remove}\r\n                toggleDone={toggleDone}\r\n            />\r\n        </BoardPageWrapper>\r\n    );\r\n}\r\n\r\nconst BoardPageWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n`;\r\n\r\nconst BoardTitle = styled.h1`\r\n    font-size: 35px;\r\n    margin: auto;\r\n    background: #6a89cc;\r\n    border-radius: 5px;\r\n    padding: 10px 20px;\r\n    color: white;\r\n    ${Shadow};\r\n`;\r\n\r\nconst ToHome = styled(Link)`\r\n    font-size: 30px;\r\n    color: #6a89cc;\r\n    &:hover{\r\n        color: #1e3799;\r\n    }\r\n`;\r\n\r\nconst Header = styled.header`\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 10px 20px;\r\n`;\r\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { createGlobalStyle } from \"styled-components\";\nimport Home from './routes/Home';\nimport BoardPage from './routes/BoardPage';\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n        padding: 0;\n        margin: 0;\n        box-sizing: border-box;\n        font-family: 'Montserrat', 'Noto Sans KR';\n        background-color: #f1f1f1;\n    }\n`;\n\nexport const EMPTY =  '---';\n\nfunction App() {\n    const [boardList, setBoardList] = React.useState(\n      JSON.parse(localStorage.getItem('localBoardList')) || []\n    );\n\n    React.useEffect(() => {\n      localStorage.setItem('localBoardList', JSON.stringify(boardList));\n    }, [boardList]);\n\n    const create = (boardKey, listKey, text) => {\n      if(boardKey===EMPTY){ //createBoard\n        const check = boardList.filter(board => board.boardName === text);\n        if(!check.length && text.length){\n            const newBoardList = boardList.concat([{boardKey: text.concat(Date.now()), boardName: text, listList: []}]);\n            setBoardList(newBoardList);\n        } \n      }\n      else if(listKey===EMPTY){ //createList\n        const newBoardList = [...boardList];\n        newBoardList.forEach(board => {\n          if(board.boardKey===boardKey){\n            const check = board.listList.filter(list => list.listName === text);\n            if(!check.length && text.length){\n              board.listList.push({listKey: text.concat(Date.now()), listName: text, cardList: []});\n            }\n          }\n        });\n        setBoardList(newBoardList);\n      }\n      else{ //createCard\n        const newBoardList = [...boardList];\n        newBoardList.forEach(board => {\n          if(board.boardKey===boardKey){\n            board.listList.forEach(list => {\n              if(list.listKey===listKey){\n                const check = list.cardList.filter(card => card.content === text);\n                if(!check.length && text.length){\n                  list.cardList.push({cardKey: text.concat(Date.now()), content: text, done: false});\n                }\n              }\n            });\n          }\n        });\n        setBoardList(newBoardList);\n      } \n    };\n\n\n    const remove = (boardKey, listKey, cardKey) => {\n      if(boardKey===EMPTY){\n        return;\n      }\n      else{\n        if(listKey===EMPTY){ //removeBoard\n          const newBoardList = boardList.filter(board => board.boardKey !== boardKey);\n          setBoardList(newBoardList);   \n        }\n        else if(cardKey===EMPTY){ //removeList\n          const newBoardList = [...boardList];\n          newBoardList.forEach(board => {\n            if(board.boardKey===boardKey){\n              board.listList = board.listList.filter(list => list.listKey !== listKey);\n            }\n          });\n          setBoardList(newBoardList);\n          setBoardList(newBoardList);\n        }\n        else{ //removeCard\n          const newBoardList = [...boardList];\n          newBoardList.forEach(board => {\n            if(board.boardKey===boardKey){\n              board.listList.forEach(list => {\n                if(list.listKey===listKey){\n                  list.cardList = list.cardList.filter(card => card.cardKey !== cardKey);\n                }\n              });\n            }\n          });\n          setBoardList(newBoardList);\n        }\n      }\n    };\n\n    const toggleDone = (boardKey, listKey, cardKey) => {\n      const newBoardList = [...boardList];\n      newBoardList.forEach(board => {\n        if(board.boardKey===boardKey){\n          board.listList.forEach(list => {\n            if(list.listKey===listKey){\n              list.cardList.forEach(card => {\n                if(card.cardKey===cardKey){\n                  card.done = !card.done;\n                }\n              });\n            }\n          });\n        }\n      });\n      setBoardList(newBoardList);\n    };\n\n    return (\n        <>\n            <GlobalStyle />\n            <HashRouter>\n              <Route path=\"/\" exact={true} render={props => <Home {...props} boardList={boardList} create={create} remove={remove}/>} />\n              <Route path=\"/board/:boardName\" render={props => <BoardPage {...props} boardList={boardList} create={create} remove={remove} toggleDone={toggleDone}/>} />\n            </HashRouter>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}