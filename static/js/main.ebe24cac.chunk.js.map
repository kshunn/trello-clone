{"version":3,"sources":["routes/Home.js","components/Card.js","components/List.js","components/Board.js","routes/BoardPage.js","App.js","index.js"],"names":["Home","boardList","create","remove","useState","text","setText","Container","BoardsWrapper","Title","Boards","map","board","BoardLink","key","boardKey","ToBoard","to","pathname","boardName","state","name","Button","onClick","EMPTY","className","BoardAdder","BoardInput","type","value","onChange","e","target","placeholder","preventDefault","createNewBoard","styled","button","Input","input","h2","Link","div","Card","listKey","cardKey","content","done","toggleDone","ICON","Cardtext","props","List","listName","cardList","ListContainer","ScrollView","card","CardWrapper","CardAdder","CardInput","createNewCard","Board","listList","BoardContainer","list","ListWrapper","ListAdder","ListInput","createNewList","BoardPage","location","history","undefined","push","find","BoardPageWrapper","Header","BoardTitle","ToHome","h1","header","GlobalStyle","createGlobalStyle","App","React","JSON","parse","localStorage","getItem","setBoardList","useEffect","setItem","stringify","filter","length","newBoardList","concat","Date","now","forEach","path","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ebe24cac.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport {EMPTY} from '../App';\r\n\r\nconst ADD = \"fas fa-plus\";\r\nconst DELETE = \"fas fa-trash\";\r\n\r\nexport default function Home({boardList, create, remove}){\r\n    const [text, setText] = useState(\"\");\r\n    const createNewBoard = text => {\r\n        create(EMPTY, EMPTY, text);\r\n    };\r\n    const deleteBoard = key => {\r\n        remove(key, EMPTY, EMPTY);\r\n    };\r\n    const onChange = e =>{\r\n        setText(e.target.value);\r\n    };\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createNewBoard(text);\r\n        setText(\"\");\r\n    };\r\n    return(\r\n        <Container> \r\n            <BoardsWrapper>\r\n                <Title>Boards</Title> \r\n                <Boards>  \r\n                {boardList.map(board => (\r\n                    <BoardLink key={board.boardKey}>\r\n                        <ToBoard to={{\r\n                            pathname: `/board/${board.boardName}-board`,\r\n                            state:{\r\n                                key: board.boardKey,\r\n                                name: board.boardName\r\n                            }\r\n                        }}>\r\n                            {board.boardName}\r\n                        </ToBoard>\r\n                        <Button onClick={() => deleteBoard(board.boardKey)}><i className={DELETE}></i></Button>\r\n                    </BoardLink>\r\n                ))}\r\n                <BoardAdder>\r\n                    <BoardInput type=\"text\" value={text} onChange={onChange} placeholder='Add a board..'/>\r\n                    <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n                </BoardAdder>\r\n                </Boards>   \r\n            </BoardsWrapper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    background: none;\r\n    &:hover{\r\n        color: #b3c2bf;\r\n    }\r\n    cursor: pointer;\r\n    color: #3b3a36;    \r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border: none;\r\n    padding: 5px;\r\n    background: none;\r\n    font-family: 'Lora', 'Noto Serif KR';\r\n    &::placeholder{\r\n        color: #b3c2bf;\r\n    }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n    color: #3b3a36;\r\n`;\r\n\r\nconst BoardInput = styled(Input)`\r\n    text-align: center;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    margin: auto 0;\r\n`;\r\n\r\nconst ToBoard = styled(Link)`\r\n    color: #3b3a36;\r\n    text-decoration: none;\r\n    &:hover{\r\n        color: #b3c2bf;\r\n    }\r\n    margin: auto;\r\n    font-weight: bold;\r\n    word-wrap: break-word;\r\n    word-break: break-word;\r\n    text-align: center;\r\n`;\r\n\r\nconst BoardAdder = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin: 10px;\r\n    padding: 20px;\r\n    border-radius: 20px;\r\n    width: 150px;\r\n    height: 150px;\r\n    background-color: white;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 40px;\r\n`;\r\n\r\nconst BoardLink = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin: 10px;\r\n    padding: 20px;\r\n    border-radius: 20px;\r\n    width: 150px;\r\n    height: 150px;\r\n    background-color: white;\r\n`;\r\n\r\nconst Boards = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n`;\r\n\r\nconst BoardsWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    align-items: center;\r\n    border-radius: 20px;\r\n    background-color: #c0dfd9;\r\n`;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Button} from '../routes/Home';\r\n\r\nconst CHECK = \"fas fa-check\";\r\nconst DONE = \"fas fa-times\";\r\n\r\nexport default function Card({ boardKey, listKey, cardKey, content, done, toggleDone }){\r\n    const ICON = done ? DONE : CHECK;\r\n    return (\r\n        <>\r\n            <Cardtext done={done}>{content}</Cardtext>\r\n            <Button done={done} onClick={()=>toggleDone(boardKey, listKey, cardKey)}><i className={ICON}></i></Button>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Cardtext = styled.div`\r\n    width: 100%;\r\n    padding: 5px;\r\n    text-align: left;\r\n    font-size: 14px;\r\n    text-decoration: ${props => (props.done ? 'line-through' : 'none')};\r\n`;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from './Card';\r\nimport {Button, Input} from '../routes/Home';\r\n\r\nconst ADD = \"fas fa-plus\";\r\nconst DELETE = \"fas fa-trash\";\r\n\r\nexport default function List({boardKey, listKey, listName, cardList, create, remove, toggleDone}){\r\n    const [text, setText] = useState(\"\");\r\n    const createNewCard = text => {\r\n        create(boardKey, listKey, text);\r\n    };\r\n    const onChange = e =>{\r\n        setText(e.target.value);\r\n    };\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createNewCard(text);\r\n        setText(\"\");\r\n    };\r\n    const deleteCard = (key) => {\r\n        remove(boardKey, listKey, key);\r\n    };\r\n    return (\r\n        <ListContainer>\r\n            <h4>{listName}</h4>\r\n            <ScrollView>\r\n            {cardList.map(card => (\r\n                <CardWrapper key={card.cardKey}>\r\n                    <Card \r\n                        boardKey={boardKey}\r\n                        listKey={listKey}\r\n                        cardKey={card.cardKey}\r\n                        content={card.content}\r\n                        done={card.done}\r\n                        toggleDone={toggleDone}\r\n                    />\r\n                    <Button onClick={()=>deleteCard(card.cardKey)}><i className={DELETE}></i></Button>\r\n                </CardWrapper>\r\n            ))}\r\n            </ScrollView>\r\n            <CardAdder>\r\n                <CardInput type=\"text\" value={text} onChange={onChange} placeholder='Add a card..' />\r\n                <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n            </CardAdder>\r\n        </ListContainer>\r\n    );\r\n\r\n}\r\n\r\nconst ListContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 10px;\r\n    word-wrap: break-word;\r\n    word-break: break-word;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin: 5px 0;\r\n    border-radius: 5px;\r\n    background-color: #b3c2bf;\r\n    padding: 10px;\r\n    color: #3b3a36;\r\n`;\r\n\r\nconst ScrollView = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 0 15px;\r\n    max-height: 48vh;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst CardAdder = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 5px;\r\n    width: 100%;\r\n    margin: 5px 0;\r\n    background-color: #e9ece5;\r\n    padding: 10px;\r\n    color: white;\r\n`;\r\n\r\nconst CardInput = styled(Input)`\r\n    width: 100%;\r\n    color: white;\r\n    &::placeholder{\r\n        color: #b3c2bf;\r\n    }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport List from './List';\r\nimport {EMPTY} from '../App';\r\nimport {Button, Input} from '../routes/Home';\r\n\r\nconst ADD = \"fas fa-plus\";\r\nconst DELETE = \"fas fa-trash\";\r\n\r\nexport default function Board({boardKey, boardName, listList, create, remove, toggleDone}) {\r\n    const [text, setText] = useState(\"\");\r\n    const createNewList = text => {\r\n        create(boardKey, EMPTY, text);\r\n    };\r\n    const deleteList = (key) => {\r\n        remove(boardKey, key, EMPTY);\r\n    };\r\n    const onChange = e =>{\r\n        setText(e.target.value);\r\n    };\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createNewList(text);\r\n        setText(\"\");\r\n    };\r\n    return(\r\n        <BoardContainer>\r\n            {listList.map(list => (\r\n                <ListWrapper key={list.listKey}>\r\n                    <List\r\n                        boardKey={boardKey} \r\n                        listKey={list.listKey} \r\n                        listName={list.listName} \r\n                        cardList={list.cardList} \r\n                        create={create} \r\n                        remove={remove} \r\n                        toggleDone={toggleDone}\r\n                    />\r\n                    <Button onClick={() => deleteList(list.listKey)}><i className={DELETE}></i></Button>\r\n                </ListWrapper>\r\n            ))}\r\n            <div>\r\n                <ListAdder>\r\n                    <ListInput type=\"text\" value={text} onChange={onChange} placeholder='Add a list..'/>\r\n                    <Button onClick={onSubmit}><i className={ADD}></i></Button>\r\n                </ListAdder>\r\n            </div>\r\n        </BoardContainer>\r\n    );\r\n\r\n}\r\n\r\nconst BoardContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    padding: 0 10px;\r\n    overflow-x: auto;\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst ListAdder = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 20px 0 10px;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    padding: 10px 10px 5px 10px;\r\n    width: 210px;\r\n`;\r\n\r\nconst ListWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 10px;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    background-color: white;\r\n    min-width: 210px;\r\n    max-width: 210px;\r\n`;\r\n\r\nconst ListInput = styled(Input)`\r\n    margin-bottom: 5px;\r\n    text-align: center;\r\n    font-weight: bold;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Board from '../components/Board';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function BoardPage({location, history, boardList, create, remove, toggleDone}){\r\n    if(location.state===undefined){\r\n        history.push(\"/\");\r\n        return null;\r\n    }\r\n    const board = boardList.find(board => board.boardKey===location.state.key);\r\n    return (\r\n        <BoardPageWrapper>\r\n            <Header>\r\n                <BoardTitle>{location.state.name}</BoardTitle>\r\n                <ToHome to={{pathname: '/'}}><i className=\"fas fa-home\"></i></ToHome>\r\n            </Header>\r\n            <Board \r\n                boardKey={location.state.key} \r\n                boardName={location.state.name} \r\n                listList={board.listList} \r\n                create={create} \r\n                remove={remove}\r\n                toggleDone={toggleDone}\r\n            />\r\n        </BoardPageWrapper>\r\n    );\r\n}\r\n\r\nconst BoardPageWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n    text-align: center;\r\n    min-height: 100vh;\r\n`;\r\n\r\nconst BoardTitle = styled.h1`\r\n    font-size: 30px;\r\n    margin: auto;\r\n    padding: 10px 20px;\r\n    color: #3b3a36;\r\n`;\r\n\r\nconst ToHome = styled(Link)`\r\n    font-size: 30px;\r\n    color: #3b3a36;\r\n    &:hover{\r\n        color: #b3c2bf;\r\n    }\r\n`;\r\n\r\nconst Header = styled.header`\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 10px 20px;\r\n    background-color: #c0dfd9;\r\n`;\r\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { createGlobalStyle } from \"styled-components\";\nimport Home from './routes/Home';\nimport BoardPage from './routes/BoardPage';\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n        padding: 0;\n        margin: 0;\n        box-sizing: border-box;\n        font-family: 'Lora', 'Noto Serif KR';\n        background-color: #e9ece5;\n    }\n    ::-webkit-scrollbar{\n      background: #f1f1f1;\n      height: 14px;\n    }\n    ::-webkit-scrollbar-track{\n      box-shadow: inset 0 0 10px #00000070;\n      border-radius: 10px;\n    }\n    ::-webkit-scrollbar-thumb{\n      background: #8395a7;\n      border-radius: 10px;\n    }\n`;\n\nexport const EMPTY =  '---';\n\nfunction App() {\n    const [boardList, setBoardList] = React.useState(\n      JSON.parse(localStorage.getItem('localBoardList')) || []\n    );\n\n    React.useEffect(() => {\n      localStorage.setItem('localBoardList', JSON.stringify(boardList));\n    }, [boardList]);\n\n    const create = (boardKey, listKey, text) => {\n      if(boardKey===EMPTY){ //createBoard\n        const check = boardList.filter(board => board.boardName === text);\n        if(!check.length && text.length){\n            const newBoardList = boardList.concat([{boardKey: text.concat(Date.now()), boardName: text, listList: []}]);\n            setBoardList(newBoardList);\n        } \n      }\n      else if(listKey===EMPTY){ //createList\n        const newBoardList = [...boardList];\n        newBoardList.forEach(board => {\n          if(board.boardKey===boardKey){\n            const check = board.listList.filter(list => list.listName === text);\n            if(!check.length && text.length){\n              board.listList.push({listKey: text.concat(Date.now()), listName: text, cardList: []});\n            }\n          }\n        });\n        setBoardList(newBoardList);\n      }\n      else{ //createCard\n        const newBoardList = [...boardList];\n        newBoardList.forEach(board => {\n          if(board.boardKey===boardKey){\n            board.listList.forEach(list => {\n              if(list.listKey===listKey){\n                const check = list.cardList.filter(card => card.content === text);\n                if(!check.length && text.length){\n                  list.cardList.push({cardKey: text.concat(Date.now()), content: text, done: false});\n                }\n              }\n            });\n          }\n        });\n        setBoardList(newBoardList);\n      } \n    };\n\n\n    const remove = (boardKey, listKey, cardKey) => {\n      if(boardKey===EMPTY){\n        return;\n      }\n      else{\n        if(listKey===EMPTY){ //removeBoard\n          const newBoardList = boardList.filter(board => board.boardKey !== boardKey);\n          setBoardList(newBoardList);   \n        }\n        else if(cardKey===EMPTY){ //removeList\n          const newBoardList = [...boardList];\n          newBoardList.forEach(board => {\n            if(board.boardKey===boardKey){\n              board.listList = board.listList.filter(list => list.listKey !== listKey);\n            }\n          });\n          setBoardList(newBoardList);\n          setBoardList(newBoardList);\n        }\n        else{ //removeCard\n          const newBoardList = [...boardList];\n          newBoardList.forEach(board => {\n            if(board.boardKey===boardKey){\n              board.listList.forEach(list => {\n                if(list.listKey===listKey){\n                  list.cardList = list.cardList.filter(card => card.cardKey !== cardKey);\n                }\n              });\n            }\n          });\n          setBoardList(newBoardList);\n        }\n      }\n    };\n\n    const toggleDone = (boardKey, listKey, cardKey) => {\n      const newBoardList = [...boardList];\n      newBoardList.forEach(board => {\n        if(board.boardKey===boardKey){\n          board.listList.forEach(list => {\n            if(list.listKey===listKey){\n              list.cardList.forEach(card => {\n                if(card.cardKey===cardKey){\n                  card.done = !card.done;\n                }\n              });\n            }\n          });\n        }\n      });\n      setBoardList(newBoardList);\n    };\n\n    return (\n        <>\n            <GlobalStyle />\n            <HashRouter>\n              <Route path=\"/\" exact={true} render={props => <Home {...props} boardList={boardList} create={create} remove={remove}/>} />\n              <Route path=\"/board/:boardName\" render={props => <BoardPage {...props} boardList={boardList} create={create} remove={remove} toggleDone={toggleDone}/>} />\n            </HashRouter>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}